#BlueJ class context
comment0.params=nnumFloor\ numSpaces
comment0.target=Floor(int,\ int)
comment0.text=TO\ COMPLETE
comment1.params=
comment1.target=int\ getFloor()
comment1.text=TO\ COMPLETE
comment2.params=
comment2.target=int\ getFreeSpaces()
comment2.text=TO\ COMPLETE
comment3.params=
comment3.target=boolean\ isFull()
comment3.text=TO\ COMPLETE
comment4.params=
comment4.target=int\ firstFree()
comment4.text=TO\ COMPLETE
comment5.params=t
comment5.target=void\ park(Ticket)
comment5.text=TO\ COMPLETE
comment6.params=t
comment6.target=Ticket\ searchTicket(java.lang.String)
comment6.text=TO\ COMPLETE
comment7.params=spc\ exitT
comment7.target=int\ leave(int,\ labact4.TimeInstant)
comment7.text=TO\ COMPLETE
comment8.params=exitT
comment8.target=int\ emptyFloor(labact4.TimeInstant)
comment8.text=TO\ COMPLETE
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\ Returns\ a\ String\ with\ the\ occupancy\ of\ the\ floor,\ where\ 'X'\ is\ occupied,\ \n\ and\ '\ '\ is\ free.\ <br>\n\ Format\:\ <pre>\ FLOOR\ (in\ 3\ positions),\ blank\ space,\ occupancy\ \n\ ("\ \ X"\ or\ "\ \ \ "),\ blank\ space,\ ...,\ occupancy\ ("\ \ X"\ or\ "\ \ \ "),\ \n\ blank\ space,\ '\\n'</pre>\n\ Format\ example\:\ (Floor\ 2\ with\ 5\ spaces,\ occupied\ 0,\ 2,\ 3\ and\ 4)\:\ \n\ <pre>\ "--2---X-------X---X---X-"\ </pre>\n\ -\ was\ used\ for\ representing\ blank\ space.\n\ @return\ String,\ representation\ of\ floor\ occupancy.\n
numComments=10
