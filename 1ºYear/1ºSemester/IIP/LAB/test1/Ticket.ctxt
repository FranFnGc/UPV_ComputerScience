#BlueJ class context
comment0.params=t\ th\ sh\ sm
comment0.target=Ticket(java.lang.String,\ java.lang.String,\ int,\ int)
comment0.text=\ Creates\ a\ ticket\ with\ title\ t,\ theather\ th,\ session\ hours\ \n\ \ and\ minutes\ sh\:sm\n
comment1.params=
comment1.target=java.lang.String\ getTitle()
comment1.text=Get\ movie\ title
comment2.params=
comment2.target=java.lang.String\ getTheater()
comment2.text=Get\ theather\ name
comment3.params=
comment3.target=labact4.TimeInstant\ getSessionStart()
comment3.text=Get\ session\ start
comment4.params=t
comment4.target=void\ setTitle(java.lang.String)
comment4.text=Set\ to\ t\ the\ movie\ title
comment5.params=th
comment5.target=void\ setTheater(java.lang.String)
comment5.text=Set\ to\ th\ the\ theather\ name
comment6.params=sh
comment6.target=void\ setSessionStart(labact4.TimeInstant)
comment6.text=Set\ to\ sh\ the\ session\ start
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=Returns\ a\ String\ with\ ticket\ data
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=Checks\ if\ o\ is\ a\ ticket\ with\ the\ same\ data\ than\ current\ ticket
comment9.params=arrivalTime
comment9.target=double\ proportionalPrice(labact4.TimeInstant)
comment9.text=\n\ Returns\ price\ for\ Ticket\ this,\ according\ to\ the\ following\:\n\ When\ arrival\ time\ is\ previous\ or\ equal\ to\ session\ start,\ \n\ the\ Ticket\ price\ is\ the\ base\ price\n\ When\ arrival\ time\ is\ posterior\ to\ session\ start,\n\ Ticket\ price\ is\ the\ base\ price\ with\ a\ discount\n\ of\ 0.1\ euros\ for\ each\ minute\ that\ passed\ from\ session\n\ start\ until\ arrival\ time\n\ When\ discount\ is\ greater\ than\ or\ equal\ to\ base\ price\n\ Ticket\ price\ must\ be\ zero\n
numComments=10
