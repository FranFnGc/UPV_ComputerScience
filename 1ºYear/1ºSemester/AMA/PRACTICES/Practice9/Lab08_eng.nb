(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    160773,       3785]
NotebookOptionsPosition[    156010,       3627]
NotebookOutlinePosition[    156374,       3643]
CellTagsIndexPosition[    156331,       3640]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Lab08: Series",
  FontColor->RGBColor[0.501961, 0, 0]],
 StyleBox[". ",
  FontSlant->"Italic",
  FontColor->RGBColor[0.501961, 0, 0]]
}], "Title",
 CellChangeTimes->{{3.587467221078125*^9, 3.587467244375*^9}, 
   3.587467352859375*^9, {3.587467610203125*^9, 3.58746761525*^9}, 
   3.58747952840625*^9, {3.587719392110547*^9, 3.587719421485347*^9}, {
   3.5884959962091446`*^9, 3.5884960064894133`*^9}, {3.58981191278125*^9, 
   3.58981192225*^9}, {3.590819862798381*^9, 3.5908198715979652`*^9}, {
   3.5908423833205976`*^9, 3.590842391417672*^9}, {3.688792384791662*^9, 
   3.688792385826497*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontColor->RGBColor[0, 0.500008, 0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1. Introduction",
 FontSize->18]], "Section 1",
 CellChangeTimes->{{3.5874672518125*^9, 3.58746725453125*^9}, {
  3.587467464984375*^9, 3.5874674695*^9}},
 TextAlignment->Left,
 TextJustification->1,
 FontSize->16],

Cell[TextData[{
 "\n\tAn important application of sequences is the representation of infinite \
summations, this concept can be formalized by defining numerical series. \n\t\
Once a sequence of real numbers {",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "n"], TraditionalForm]]],
 "} is given, it can be constructed the sequence {s",
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "n"], TraditionalForm]]],
 "}\nof the partial summation defined by:\n                                   \
                                s",
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "n"], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "2"], TraditionalForm]]],
 " +...+",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "n"], TraditionalForm]]],
 "\n          The general term of the numerical series can be written as\n    \
                                                            ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "1"], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "2"], TraditionalForm]]],
 " +...+",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["", "n"], TraditionalForm]]],
 "+...=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", "1"}]], 
    SubscriptBox["a", "n"]}], TraditionalForm]]],
 "\nand it can be defined as the value of the limit of the sequence of \
partial sums when this value is convergent. Otherwise, if this sequence \
diverges, the series will do as well."
}], "Text",
 CellChangeTimes->{
  3.58746748465625*^9, {3.587467625671875*^9, 3.5874676331875*^9}, {
   3.587467664453125*^9, 3.587467756265625*^9}, {3.587467786375*^9, 
   3.587467839*^9}, 3.587467883171875*^9, {3.58746801228125*^9, 
   3.5874680545*^9}, {3.5874684875*^9, 3.587468539953125*^9}, {
   3.58747131575*^9, 3.5874713185*^9}, {3.587471511953125*^9, 
   3.58747158621875*^9}, {3.587478092984375*^9, 3.587478113484375*^9}, {
   3.587478181453125*^9, 3.5874782635*^9}, 3.587479519703125*^9, 
   3.587570566375*^9, {3.58757062634375*^9, 3.58757064803125*^9}, 
   3.5876418960500326`*^9, 3.587642006772326*^9, 3.5876420595083885`*^9, {
   3.5876423888314266`*^9, 3.5876424466770277`*^9}, {3.5876424817093983`*^9, 
   3.5876425863226004`*^9}, {3.587718262080717*^9, 3.5877182736247177`*^9}, 
   3.587719445868147*^9, {3.5877194770525465`*^9, 3.587719535755347*^9}, 
   3.587719576143747*^9, 3.5877295124626856`*^9, {3.587729560947486*^9, 
   3.587729566797486*^9}, {3.588342186109375*^9, 3.58834218703125*^9}, {
   3.5884960289219255`*^9, 3.58849603711182*^9}, {3.5884963043581104`*^9, 
   3.5884963106137104`*^9}, {3.58849639368371*^9, 3.5884963999861107`*^9}, {
   3.5884975046058464`*^9, 3.5884975077570667`*^9}, {3.589811955*^9, 
   3.5898119785625*^9}, {3.589812055109375*^9, 3.58981206809375*^9}, {
   3.589812266953125*^9, 3.589812278796875*^9}, {3.59065277984375*^9, 
   3.590652832453125*^9}, 3.59065291871875*^9, {3.5908199019284477`*^9, 
   3.5908199414641685`*^9}, 3.590831002150502*^9, {3.590842552406892*^9, 
   3.5908425756684303`*^9}, 3.5908431930742764`*^9, {3.590932022265625*^9, 
   3.590932079578125*^9}, {3.590932128671875*^9, 3.590932370671875*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["2. Finite summations",
 FontSize->18]], "Section 1",
 CellChangeTimes->{{3.5874672518125*^9, 3.58746725453125*^9}, {
   3.587467464984375*^9, 3.5874674695*^9}, {3.587628634112982*^9, 
   3.5876286613264046`*^9}, {3.587629846153367*^9, 3.5876298755339537`*^9}, {
   3.5876441651906376`*^9, 3.5876441821443048`*^9}, {3.5877196038181467`*^9, 
   3.5877196141141467`*^9}, {3.588496439610312*^9, 3.588496454383607*^9}, 
   3.589798241484375*^9, {3.589812318921875*^9, 3.589812331171875*^9}, {
   3.590652857828125*^9, 3.590652861203125*^9}, {3.59065347275*^9, 
   3.590653474484375*^9}, {3.590821468621045*^9, 3.5908214966851273`*^9}, {
   3.590932379296875*^9, 3.59093239103125*^9}, {3.590934397578125*^9, 
   3.590934411703125*^9}, {3.59093452153125*^9, 3.590934525625*^9}},
 TextAlignment->Left,
 TextJustification->1,
 FontSize->16],

Cell[TextData[{
 "     ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can do essentially all sums that are found in books of tables. We can \
directly use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to compute the result of an infinite/finite summation, by using either ",
 StyleBox["Sum[ ]",
  FontWeight->"Bold"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.587477326234375*^9, 3.587477415421875*^9}, {
   3.58747748521875*^9, 3.587477491703125*^9}, {3.587477830953125*^9, 
   3.587477854234375*^9}, {3.587478049484375*^9, 3.587478066734375*^9}, {
   3.5874783103125*^9, 3.5874783123125*^9}, {3.587478348546875*^9, 
   3.587478383640625*^9}, {3.5874795494375*^9, 3.587479557125*^9}, {
   3.587626233890625*^9, 3.587626262359375*^9}, {3.58762633265625*^9, 
   3.587626378328125*^9}, {3.587626473234375*^9, 3.5876265155625*^9}, {
   3.58762703353125*^9, 3.587627152359375*^9}, 3.587627194328125*^9, {
   3.587627279203125*^9, 3.5876273490625*^9}, {3.58762751603125*^9, 
   3.587627538375*^9}, {3.5876289255653133`*^9, 3.58762893357069*^9}, {
   3.5876290289772396`*^9, 3.5876291242584596`*^9}, {3.587629227061206*^9, 
   3.5876292905990763`*^9}, {3.5876294843179655`*^9, 3.587629533928138*^9}, 
   3.587641049410149*^9, 3.587642918690772*^9, 3.587718428485917*^9, {
   3.587719635330147*^9, 3.587719673316147*^9}, {3.5877198172263403`*^9, 
   3.587719825915652*^9}, {3.5877199126215634`*^9, 3.5877199589541574`*^9}, {
   3.5877295867966857`*^9, 3.5877296241586857`*^9}, {3.588496543335162*^9, 
   3.5884965743943644`*^9}, {3.5884976244453773`*^9, 3.588497714688177*^9}, {
   3.5885049147246923`*^9, 3.588504925067559*^9}, {3.58981234890625*^9, 
   3.589812409296875*^9}, {3.5906529275*^9, 3.59065293015625*^9}, 
   3.590653483453125*^9, {3.590653706140625*^9, 3.590653706703125*^9}, 
   3.5908204703133726`*^9, {3.590820510257549*^9, 3.5908205620492163`*^9}, {
   3.5908205981270514`*^9, 3.590820623203644*^9}, {3.5908207056968317`*^9, 
   3.590820709488798*^9}, {3.5908213075759077`*^9, 3.5908214428164253`*^9}, {
   3.5908215198718877`*^9, 3.590821542537859*^9}, 3.5908310159275975`*^9, 
   3.590834067953224*^9, {3.590932416453125*^9, 3.59093243121875*^9}, 
   3.590932505328125*^9, {3.590932558375*^9, 3.590932580234375*^9}, {
   3.590932675703125*^9, 3.590932693765625*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[GraphicsData["CompressedBitmap", "\<\
eJztGT1PFUFwud177wCRQHwo0UTsjJZqYWIsiNFGa21fiAkUIEGillaPUGu0
sTEx/g4Ta2KwsrWzsaV93uzd7cfczN657+Ejhhdub29mdna+dnZ2edTfXX+6
2d/dWOuvPNjpb69vrD1fuf9sJwfJKSGSt0KI1RUB/WHeLZth/lc076AB8DEA
kgJw9PuHbvahmT1F/Y+oPgCEguDSvfKd6E7HgCj02dBQ6Q1VCAZvLc/D+Ok/
YlWuGtSs38snrhjA0yFgGQtL8eT6nZScXHoHr6LYyUYYxVcZZb+b3jXoabK7
8UpcGs2/L0j/IOEp/0ybWShPWexMvGoSMemSTHxmCjOjpKMcdEjArhOwO/H6
XBxDbL3E/loAgBLLy6/LEMt7pY+hB08XWkmYpwq/BAnmCidtzHARnRLDPR00
laXHesFjESlHIkfm4guUtoyMrSb1GJwsPJP/utSKLOQlnaIBHeMeZWCN0yHR
U8OD9WB8AHR9saQRmnKKJZacXtLQMRoqpE17O1CwthGX+REXVjMpLeNGHL3U
a4nqFbmycyVhCbtKwnclrYvTSz9Bg9y3agzkjIwA583IPtfImQidOhu7NsvF
iSXAOBefNfJUpDYywJPdyceUIkK4TmOMM26ogRnq0CIKTU45VAWMH9zxakNw
AebOTGVsRrlQHmn2CBWtlMIh70RuGO3UG2mlhGzzFzJocIt9tlay9Ep+bvIy
FUqGwfhNhdqRu6MELV/TgqptGYWnafAFGrzEMj4JuQPXCcKtUsYZwM0u4YqS
CGfq5GGrDFt5cOeCSLOn1BTHnwyYLLs0BpdU/didsnaOXCxGmHUdqmNC5Qou
snyYVbGWEChNjgIXDk5K9Yv0LIhAXM5wxOdYR5yEdMAUB83iTjJV4HIgMhhm
aAvYKwzkycbj7ljLDlqV2HnCB/kW8Y2vc6KZD6CtH3f8I02ZYqtzTXG5UURz
dbnhZAy2PHRMxlyU2cjwwL7I1P5PkMKPzBnwO88hei0X3Ca0CgldIpWB6l5q
Sf257H2MPeGy9wBeWOGJXXWlT9UZo+XtPYaVOuUsyV41UAwoSwp3v5MBtTuc
CD0zCN0ZUMR7bVaCDv1FIh4uE7B7LWNpi4DNs2PpsLhJ0D8mYLcI2Hus+aJd
5fYKE94LxnhXCD6rwcSzHZB+bpLaDgtAJSdleSoF3zAjnpjeN5L35P9xdYqa
FCoPmp9fPouDN7v6GUKrm4H+luLXwVdNB0/mDwSCT7fn9TOEVjcD/S3F4Yc9
biDwBLQmgVY3A/1Nzvhv/lMeARBTfwDGod7Q\
\>"], "Graphics",
 ImageSize->{660, 66},
 Background->GrayLevel[1]],

Cell[TextData[{
 "     or using the symbol  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"\[Placeholder]", "=", "\[Placeholder]"}], "\[Placeholder]"], 
    "\[Placeholder]"}], TraditionalForm]]],
 "   from Palettes  \n"
}], "Text",
 CellChangeTimes->{{3.587477326234375*^9, 3.587477415421875*^9}, {
   3.58747748521875*^9, 3.587477491703125*^9}, {3.587477830953125*^9, 
   3.587477854234375*^9}, {3.587478049484375*^9, 3.587478066734375*^9}, {
   3.5874783103125*^9, 3.5874783123125*^9}, {3.587478348546875*^9, 
   3.587478383640625*^9}, {3.5874795494375*^9, 3.587479557125*^9}, {
   3.587626233890625*^9, 3.587626262359375*^9}, {3.58762633265625*^9, 
   3.587626378328125*^9}, {3.587626473234375*^9, 3.5876265155625*^9}, {
   3.58762703353125*^9, 3.587627152359375*^9}, 3.587627194328125*^9, {
   3.587627279203125*^9, 3.5876273490625*^9}, {3.58762751603125*^9, 
   3.587627538375*^9}, {3.5876289255653133`*^9, 3.58762893357069*^9}, {
   3.5876290289772396`*^9, 3.5876291242584596`*^9}, {3.587629227061206*^9, 
   3.5876292905990763`*^9}, {3.5876294843179655`*^9, 3.587629533928138*^9}, 
   3.587641049410149*^9, 3.587642918690772*^9, 3.587718428485917*^9, {
   3.587719635330147*^9, 3.587719673316147*^9}, {3.5877198172263403`*^9, 
   3.587719825915652*^9}, {3.5877199126215634`*^9, 3.5877199589541574`*^9}, {
   3.5877295867966857`*^9, 3.5877296241586857`*^9}, {3.588496543335162*^9, 
   3.5884965743943644`*^9}, {3.5884976244453773`*^9, 3.588497714688177*^9}, {
   3.5885049147246923`*^9, 3.588504925067559*^9}, {3.58981234890625*^9, 
   3.589812409296875*^9}, {3.5906529275*^9, 3.59065293015625*^9}, 
   3.590653483453125*^9, {3.590653706140625*^9, 3.590653706703125*^9}, 
   3.5908204703133726`*^9, {3.590820510257549*^9, 3.5908205620492163`*^9}, {
   3.5908205981270514`*^9, 3.590820623203644*^9}, 3.5908206890153008`*^9, {
   3.59083103508759*^9, 3.590831155867317*^9}, {3.5908321883126516`*^9, 
   3.5908322320372095`*^9}, {3.5908322638127794`*^9, 3.590832265325902*^9}, {
   3.5908323071161585`*^9, 3.590832495724599*^9}, {3.590832532745772*^9, 
   3.590832541872357*^9}, {3.590832709054043*^9, 3.590832786281963*^9}, {
   3.5908332279213467`*^9, 3.5908333023424096`*^9}, {3.5908340918054843`*^9, 
   3.5908341012758985`*^9}, {3.590932702109375*^9, 3.590932767609375*^9}, {
   3.59093286678125*^9, 3.590932873734375*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3W2UJFWd7/tc587Rs2bGeRA8IzPnHHTEBkeqLBEcwRHoAQRUGFMrFXlQ
QVRsBLqE7BQRLBB5ECFpSEgeu5umabqb4rGgoOhu6G5UGmc4gxjOnLMAlVl3
3TM6981d92nd86ZvPMeOiL0jduyMzIis+n7Wf7GqM3f+c0dkJat+uSMi333O
RZ/52r9rNBoX/wf7P585u7PyW986+9LP/p79j7+99JKvnvO/2D/8b/Z/3v7v
Gw3n543T+/3JX37l9w9aZddH33fqEe9reT/r1ntX/YFT58trxfl/GNU3Y3Ww
U29L1gV+HeLUH0nrfRd69cfS+iuvLrLrTxL1/lj96ftXx+rQWL3dqZmoJmK1
X1Tf2m8yWfuL9QG7LhbrHWFNiXVJWP/Rqw+mq23Xn9l1mLLeediad35IWQfY
dbhdHWn9+RFhfVtSH/72X8Tq0qj+2qn/JKnvOPURp/6ztI606zK7/ou0jvLr
wKO+K6mP+vUuvy6P6m9i9e6ornDqY7H6S7GO/l6i3iPWMV7NhnVQWMcm6kq7
3hvWSmldtcKuv1XWwXYd931VHWLX8V5dna73nSDWDxL1Vx9P1zV+nXjN+5V1
7ftPcupQaZ3s1XUT0vqEX5NOXZ+sT/r1gah+6NenoppK1g1Tp8Tqg2KdateP
xDpMrL8L60avPhTWp9N10+FhNSV1hFNdpz4jqQ979Vm7bpbWX9s1HdbaRH2k
la5bwjryc9K61anP33pURp3W+2hGfaH3N07dJqnT/fqYX7fH6gy/jo5V36kz
ozomXWfdEdaxifqiV3d6tTJRXxLrLrv+NqwvS+q4L9/t19mSOt6ve44/R1In
ePUVr+5N1Me9OlesdWGdaNdXpbXeq5O+pqoNJ319w8kZdd6GT5x3n7K+cd8n
/dqYrFVOfSpW90d1vl+nJGvTKd+M6tR0XWDXA179XaIuFGvzpxN1UayaFz0Y
q9Wx+oxfW5yakdRnw/rW1nRNe3VxWNvEanl1SaIe8upzdrVVNfd5u9Zk1Wmd
h5X17Ye/4NQj8rr0kdOjejRW33HqjGQ95tdlTp0pre8+7tVZ0rrcqyfs+mKi
rojVl66Yj9X3YvVlp56MajZWZ0f11NlXJuscsa6ya0Gsr4T1fbGeDutcr65O
1zN2fdWuHyjraz9Y/No1yvq6Xdfa9ay0zrsurO2Sun77N2K1I6ofOrVKUjud
usGp86X1I7ues+ub0rrRrwtufF5SN/l1oV+7ourG6qKodjt1c6xWi7V2T6Jm
xLrFqxfC+lZYtybqx3ZdHFZPWj+5xK7blNW26/afqmqNXX2vXkxX5w6x9ibq
23em6yW/7nrpUmX97NK7nfqOtO7x6u8vk9a9fn3XqX9I1jq/Lo/qZb/WR3VF
sv7rFRti9T2x7rPrH8WaFWtjWK94dWVY96fr51eFtUlS33fqVacekNTVXm22
6xfS+oFdD4ZlJeqaLen6ZVjXbpXWPzm17Z+uE4rUTGomNZOaSc2kZlIzqZnU
TGomNZOaSc2kZlKzKjX3jm+cPjlx4eEr7NrzpT97z0FnkJpJzaRmUjOpmdRM
aiY1k5pJzaRmUjOpmdRMavZq5kON73yk8bPTnXrk5Pf9wXvOG2pqftuKa275
9T7HrxePSafmb//cve/n5+ul5j+51B//zUPKSM2Xvbpv36sXVJiaL/+Fuzm/
uMj++YMPLO4L7H5gbFLzh7dsd6e8fbaq1Ny78013Bm/u/hSpmdRMaiY1k5pJ
zaRmUjOpmdRMaiY1D5yaHzvzD5856+2vnPV7dj37d/uf+oHpDx7yxQ++/2y7
/uKQc6N0/OlnXnOzyGt3/8C/Zc0r7g3/45ZPZ6XmMCa/fs81qdQc3TXU1Py3
9/6rP0yemjfa+XTxsig1X/D8vtfv/WGh1HzBLvcZfrP9eC8sf/dVL+8uXu6m
5qkf3fYb99+7Numl5hu98W+sv3H4a80PPuuH89/2z/RT8wFHbAlutGayUvPa
vhtR39i4trrUfKsXk3+1qVd6av70A//m9vqnNfHUvObH+yI/fliemq/55337
YsNIzaRmUjOpmdRMaiY1k5pJzaRmUvM4puZXL/7zPV99+83H/3u7nvxM47Wz
G6+cc/BpR55l1zsPLj81i0dov234qfmbz4u5RZWaV//pd16NBZx9r/ZaxVLz
8et+6z3wAjc1n+D/c9/r629wU/OmRf+fP9JLzf5C8+LlIzhCO0zN+96472Yv
NZ903++C28YuNZdzhHZbzMXx1OxHZjssiz+nUnPHvutf9nzaCch33P0v6eBM
aiY1k5pJzaRmUjOpmdRMaiY1k5qXVWpe/4z7j2fuXnwtSBrPdOzUHKwsR145
v+M98F9fT98VS83X3ioMeP3ea4PgfN9i4nGDrjV7R2j/sOcu7zqLzgZHaH9+
++vOo3/b+7yTmi/cFUztN9tPmLp4/9N2ePfedpofmS/aJUx/16Z4ak747W2X
73jD/Wnx8vbH1//WidWHbX42Pub2093UfPrON7x/brCCu6zVH+re/qb/jzfu
62ak5n1vPnfSEZ0Djri5/2Z4k5OahaVnz+/6Z0WRWfDLb4WpeePzbwS3bp8N
k/LaO4SH/Or+tU5q/tKuX7k977z/l2Gfi4+85c43w2G3ukl56474HO78sp2a
b70zNYdLvv9L/wcnNffuEge8ufuUjz0U7/Nvd51TYK35oHP3uLPdt/MH7rHZ
P/gnr8nd56ZS82Y3MrtHaH96s9fnnzukZlIzqZnUTGomNZOaSc2kZlIzqXnc
UvMvOwc8dc6fXnrk79n19Gcbe8/8s+M/dKbk/GW91Owcd/3e84+5+3+4/3hl
lWyt+W1+an7l/Ky15g1uw3+99bN2TN7gL7xeav/sR+nX772uvCO0Vx/nDwg5
x2kXPK/ZX01e/K6dmt2ff/PqohPDX73QTs1eHP7NjhOcZeUfBUdf/+gdUxef
sP63wV3KteZ3fMFPzW/85rf+ADs1/2bnx9315Y9vCG8MU/O+fbs3vzMKy3am
XvPO73k5+rf9M+Sp+dndzoBnZzsHnPncG/t+9+xub7k5SM1vPneyu8p88kbv
9l/OZK4173vz+U98+DufCAZf7ERm767f3fHF8Od9268MU/O+fXu2HhiF5d/d
+aXLDrzql8HPbmp+c9cn3YXmT94ftJWuNUepeZsXkO273LXmh3Z4qdn5r7PQ
fIofin/Z1k/NYky2U3MYoq/JOq85SM32o0jNpGZSM6mZ1ExqJjWTmknNpGZS
87il5ssO+dmqt3//uN+3a/PJjZs+ebz8ql+aa80d98DsTnBX0zA13+LF2Oc2
eOvL5z+3z//npWGsHu55zfue31j0amDeqc2vr7thf2/dedcmd8XZWV/2o/Gu
Tc7VwKJo7B2bvSkMyPmpef1NkiO0w/Xl04W15tOdQ7JX7/YC7M4TP7QmDNTP
fk+RmmfdH3Y/OLPbWXSeuS9KzbEjtM96zu0TW25WHqE968deOyn7CXrPFm/d
+eI9flKO1pq/5ByY7d/uBOTLDgwC9Y6r4odnhw/5clZqvnOTH67bqiO0z9nt
9gmWmwdIzb/a3Fen5uAIbdaaSc2kZlIzqZnUTGomNZOaSc2k5nFMzZcf9otv
HfjEGfvZteGk//DfvvT2Tx31lcpT8zNeTE749eL5Xv799eLKVGoOfvYtXlr0
CO2ca2jvd1ns3OfFy5Kp2T+12Y7G7qXAFr/rn928ePnF3gHb9g92ahYWl73U
HC4935ibmhcvF85rDpeVfYOn5s7Mbr/XG/fdfFI8NR/gh+VQ4dTsx+GEN3d9
Qj81h6vSwRyyU/OOF7xWu09JpGY/LIeGm5qDheZ9v958B+c1k5pJzaRmUjOp
mdRMaiY1k5pJzWOXmv/5ogNeOOdPfvLlP7Lrmc/82TOfPfDhM4792Ie/atfv
H/SNilNzsNYc1kp1ah74vOaBv6/ZP7X51UVvifnz3woWnX/hRmBn0bms1Bwc
le2ezlzaWnPngFnvKO7f9c/8tpiag5/tpGy+1hwsLm9JXg1MLzUHR2W7R2vr
rTX7qfmFbeLVwIKjsp2kXOJas/II7fBK2v6VwUjNpGZSM6mZ1ExqJjWTmknN
pGZS8xJNzQet83LxSI/Qdi8LJknNJR+hXVJqDk5tdr164WRwgrPHjckDHqEd
puaLvDi8e3OpR2h3DjjC/dm5JlgsNftr0Lu3lHCEtn+Oc+HUHB7RXfgI7fha
c9uP0g8ZHqGdcTWwKEEHqTn68inx2GxSM6mZ1ExqJjWTmknNpGZSM6mZ1DxO
qXnL9FvuPrmx8zSnTp9cacfhdx/05b885By73n7QV8WDtI/2rvH1q2eOdv/5
jZ1eQlj3B+/NSs1/uOL88KzkVGr+ZniX4mpgwqWz7YDsLD2HVwZzMnIUh2uR
moNvbd7nHqftpOYb/K9p3uef1Oyk5gGuBpZMzd4Fwa7wHlVCana/dsr55qk/
l6Zm74Jg4Xq0k5ovDQN1bmoOrwD2q41r/dR85S/1z2sWbv9udJUwJzV/95Jg
TVnnamB3hYdt26n5am9kgdSc9c1TidSsXGUmNZOaSc2kZlIzqZnUTGomNZOa
Sc3jlJo3nvLOa088+n+/6G12rfrw0fJLgYXlry/7nHVnJzLnpOa3rQiusO0I
v3nKSc1vO3hD7C71N085vAO2P7v4enDD67/OSc3x72v2/OutrWGl5uPDr2le
d8P+3hc3r/dv8U5q3v8DOt88pXNe8023h3n8N78ta61ZlZpj30X15u+EtWa7
gotmO4RvnpKk5uQ3TzkKXA1M+JKpN38nrDXbJX4pVe43Twm3vPlvqrXm+Pc1
e/7t7nOd1BwFZ0/4Zc1ial758M50g9ipzaRmUjOpmdRMaiY1k5pJzaRmUjOp
eTxS88cPO8OOwx859Et2ff2jp7zjPefmBOdE+an5fHmtcFJzUN+M1cFOvS1Z
F/jlpOYL/kha77vQqz+Wlmyt2a/3x2oYqdmr/cX6wLe8sBzWO8KaEuuSsP6j
Vx9MV9suyTW0hXrnYU5YVtUBdh2+JvV9zX4FkdlPzckKr6Ht16VR/bVT/0lS
33HqI079Z2l5R2gf6YRlSR3lV+zq2WF91K93+XV5VH8Tq3dHlbqG9seCb2pW
fPPUe8QK1prDOiisYxOV/OYpWZGaSc2kZlIzqZnUTGomNZOaSc2k5vFIzX98
0HlhBN7vPV/74/d8ndRMaiY1k5pJzaRmUjOpmdRMaiY1k5pJzaRmUjOpmdRM
aiY1k5pJzaRmUjOpmdRMaiY1k5pJzaTm7NRcLCOTmknNpGZSM6mZ1ExqJjWT
mknNpGZSM6mZ1ExqJjWTmknNpGZSM6mZ1ExqJjWTmknNpGZSM6mZ1ExqJjWT
mknNpGZSM6mZ1ExqJjWTmknNpGZSM6lZnZqtV/ZSFEVRFEVRFEVRFEVRFEVR
FEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVRFEVR
FEVRFEVRVK2r12xMziyM+BkbzX7lG04NXt4vz+h/hbKq22o0Wr3Kp2G6Myuf
Bhtltpl1/n/aMnkVKIqiKIqiyquGZ3Km355w/tIr8w+quc5kI2GqPZccFvyF
ueBNwH2UZFjhZ5zozJe7rwaZ2F4vvsWM4g/XAecsn7kyhA6emudnpkreRfLU
HPyyDXG35//mZ5fJboy93EPeRuXGZn1GkbVRid/VUn51c6o/nfgd87YlttOc
MdPdYjtz1Kk59UvuTED9P0BSM0VRFEVR1IBVdmrO/7s3+RfmoH8tO3/fDuVv
whJS88gXPQeOHs6rE+9gB1vV7h0sNbvBJLaL7MAy8B4bz93+SgmpuZqNdX9h
cj5X0Zr8SLYl8T8f/0MbMW8a/f6QmimKoiiKopZqJSNPtMI4yMqv4rGJ9Sn3
L0znqZut9O0FS0jN7h+T7XD5Mvoz0lk/Si6NpbfXvsV+iHf7xNSgE1P9+S2u
5IZtxae2b0xsiL8iH5t/fJXWvVG2k4vPWf3qp/bYIKnZnb8insT3hmRLw90b
TSl2e/p3IJpkfC9NdxW/HmX85iezTPArId0ib4bOXcJDwjim83LL3svx3zH5
u2PAjfUWZ7M2SvLLk5i89O0m+T/SoK9U4rfOnt501+4ZbU64//2ZZ+w01dst
vfNje8zfXe7Ppp/4ZadmxftU+ZahKIqiKIqi1BWLPOKfYcardarU7P55Gfyh
GAUB/6lLXGt2/yAM/gqNbhdXguZnWs5zSbc3DK3Zm6NZ0t0Yi6XCUaCJpxY3
xPvj3P+TOHrI/Fz0x3b0N/Ngc85asZLtsQFSc+YRsPG9Id/S+JjE7dLfgeCX
LfpVtCOS/bPk16Porsv6zY8vy6pfu5zUrPFyC+9l5e9Yes8MurHBLs3YKPnb
LXutWfH7Vuor5eVlZ1ekY6wwc9lOU/w/TbHzhaQcOyY8FtgLVEZqVr9PlW8Z
iqIoiqIoKln+MoMXFsLIEw8+4mpIkUqf3Rn85SzmoyGn5uiPySCASAKCfHu9
Jc7Y5pR5XrN3smTqtMopP8UrDxONvRyJVJUcP9Ccs5KsdI8NkJpTZ5gmNic3
vCeCg7gnJb8D0VRTG1jGEf6K3/x4c8XbKh5tVKlZ5+V2O/Szfsdke8ZoY/OO
0M76XCXYD5mpWfaQUs7FiP/vwt0Dzq5IxVhJ3o//Osn+n6Z8g4vHDDir29GH
HkafT6b+3yL+z1b1PlW+ZQbanxRFURRFUUu8hD9o3SuDJSNe8Z7yP8OSf0mO
PDVHx46Ka0aS7S0/NSf+JE7nJkVg10vNiqN2h5Ga5XusrNQsbEiQiOOBTrKl
yd0r7Ellak4lynhz80Sm3u1RIotvVHqLclNz7svtduhk/Y6VlprTnw9kbJTi
fy9ZqVn++1bCKxX/34KwcJz8xctMzar/pynf4MLvobe6HXyOYXY2tHKtOet9
qnzLmO5JiqIoiqKo5VCJ1FzC5WLqmprDYS7/mEzJ9o5Vao6t8ZWz1pxx0KZ8
j5V8hLa4jpxIjvLD6ctJzalfj+K7LueMfuEoWfUWZadmnZd7hKlZcRK3fKMU
uz0vNQ/llYrmJh6Y7S8xi59RlJuag18Df5XZC+zmF+nKTM2q9ympmaIoiqIo
yqASR2iXcA1Y9Z/TNUjNscHKA1+Hm5pTF7M1P0I7/hdvSak542pg0j1W8tXA
5KlZsaWSw00lt2scoa34XSpUWbvdS2fiGazyLcpMzVovt/zlGPIR2kFlbZR8
t+cdoT2UVyqaauyC7WG6F09Vzj5CO+v/aZJtdH8BZlrR6nazIz5dsVKf15zx
PlW+ZSiKoiiKoih1pa4GJkazUq+JJP61JlwMR3qBpuKlcV5zMxXBpNsrSc0D
TKzo1cCKpWYxNQhf4TTozlR/85Rsjw2SmiXfPCVPzYotje2ixDWv1DEnsX+6
Leds2fSvR9FtyfywIvX1RvItknyIFF2+Sevl1rga2PBSc+ZGSd9uidci9dKk
HlLGKxXuqImpWLp0fuWmJpM5WpmaVf9PU+785DvLuxi4aWjNuRqY/H2qfMtQ
FEVRFEVR6kpGHvEKM6Wc8CgcRRmd8DjRaafWZaJ7i/4VJz6j/11Fikv3BKJ8
l97ejNNpR/PNU/LHKs5rjrbdWcOSfCOV8Z/EiWsNSb7RppFYwDU+vF98aaK/
9mUfXyS3NDHJ+PcrZS0Oxn5Lg+Ny078eJf3mh/emliCTWyR9O0RLhxovt/y9
nLdnjDZWeal81UZJ//eS+F1N/urKft8GfaWE32TJKxJf5c9KzYr/pyl3vuxL
r8wvYZ2RmhX7LbqGtmxuFEVRFEVRFEUtwVJ9KEFRlLR4y1AURVEURVHUsioi
AEUVKt4yFEVRFEVRFLWsighAUYWKtwxFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFUXWvfQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAsVX5
l+RSVE2q6vciAAAAgDoiLAAAAAAAoOKl5sqX+Siq8qr6vQgAAACgjqwgNc/G
XSm4SvB9wdWCHwiuEVwruE5wveCHcTcIfiS4UXCToCu4WbBWcIvgVkFPcFvc
7YK+4A7BnYK7BHcL7hHcK1gnWB+3QXCfYKPgfsEmwQOCzYIHBVsEWwXb4h4S
zAkeFjwieFTwmOBxwROCecGTgqfiFgRPC54RLAqeFWwX7BDsFDwXqPq9CAAA
AKCOSM2kZlLzuKbmha81Qkfd/FrV0wEAAACWJFIzqZnUPK6p+bXXwqT82sIC
qRkAAAAYBlIzqZnUTGoGAAAAoEJqJjWTmsc1NXOENgAAADB8pGZSM6l5XFMz
AAAAgOEbWmpe+8iP3S/0+fGW3qhT8/3PuV8k9NyDI0jN9z29193MvY9vIjWT
mgEAAAAsOanUfONDL6S+yvbHD64dbmpev8N/ruceuz1MzRuCG596ICs13/HE
T51hex+/0yw1b9sZbObOB4eQmu9fdAf87On7B0jNW7a7Tf5hcQupebmn5tdu
Pqqh42sLVc8UAAAAWBqUqfnpu9x15rsWvUT59N3DPEI7TM179z5ym5eZ73j0
eWsUqXnz89HnA89sK/8IbVIzqblcmrGZ1AwAAACUIy813zT3grjcfPdibBl6
58Nrg9S8/glxeXrv3Npr1s+7P8/f5yTmWx79sfDAn2y9XZGarZ9su8MJzbc9
/pO98dS8YWfsqZ9//E4nMj/+08TK+MKDYWp+/JGXgtuf36JIzVueER++a6uQ
mrfF7vrZk+udzLxtMXbjU/fdOefdsviInZbn4vcubHtmb2J6zz5270O7Y7fs
XnzQS80P73Fv2bP45N8H977w+IYwMgu1Y57UvHxTs5+bs1KxM4CrgwEAAADl
yEnNN29+0U1qL27rXuWlZjs+uwvNax/a6Sa4J9bbmXmdF5mf2OCtNa+fj6fm
e7d7UfrhW9115nXbFal5x+KTzn/vv+GG/ra9rzy/Y/H5WGr+yUN3ugvNdz7m
3745c63Z+ukj965de+/ju9zBT2+RpWb/8Oydm4MfgoO0t3qR+ZmHvLXmbYtO
avYj8+Kct9L80GIsNQvx2VlkfnjxZwv3y9aaH9q9d36zu9a85ZndXpR+XEjN
1t4nt27YsHXRu2v7E6w1k5pT3NyszsWkZgAAAKA85uc1r33wxWC5ef0z/inM
t4pHaAep+dGHn/N+2Jh3hPaOje4Pixs2LTqLzpseFVOzcIT2nQ/tFZabc47Q
fvBpt8muJ+9NpeZ7H33JX4nuBYvO/kHafoh+8bH7hCO0557zbnx8o3iEdhCW
dz8fneCse4T2g96y8u5ntwhrzY+5R2g/vt1bid6+ldRMapZwvnVKmYztO0nN
AAAAQDnyjtC+8uZt3pryzrmb3dTsh+XYQdq3+OvOQS3eK6bm7Yt+pr4tPzX/
8P7F4BjvR2+7I5Ga/bCcPEjbODWve2KXn5R7vd46P0G/NL/OTs0b5nfFtui5
LXZqvu/J3YkbxdT8zEL83ue3KVPz5vm/j20IqZnUbCAzNwMAAAAoSW5qFg/S
Xhsk6IfXxtaabbfOPZcMzonUvHhv7tXA7NT8w41P+om4f4OYmoOf7aRc1lrz
vU++mFpVd9eXN7jLzemMLAvOW8XzmjdJgnMyNW9+2hvjnM7MWjOpeSBObuay
XwAAAMBwFUrN655273rm7sQR2uI1tDeER2snjtDWW2v2f3avCSam5geedds+
e19pR2iLh2e7gvXlXU+tj11D+yH/aO3H7xOuoe0frb338fvFq4EFHvGP1n7i
gVRqfmyXe9euhzhCm9Q8uNwLg4WDuMI2AAAAYCY3Nd/rJeVXHl931VV+avYu
CHbvE+ER2uuf2fvsei80+1/TbHg1MCc1h9/XLEvN3gXBNj0lHKF904Pb3bu2
byyUmmOHZ7tuW/9YeJD2tp17d23zQvO6BXdJ+mdPrreT8q5tXmre8LR3o3A1
sN3P790954Xmjd6ls92rgd39qJegn38olpr3zm+xU/Njz+odoX3fE7vdR+1+
lNRMao7TyM2vLSzEj+N+7eabSc0AAACAJmVqFiu6Glj34fALpH68M3k1sKCc
yCyc16z/zVMZqflHP7o9+i6qnzwvrDXf1O1uFL6USvjmqazUHByevXNzL0zN
t6176kX/IO2ndsa2yPvaKX99ObzxqQ2Sq4GF97qR2XbPPeJXTT372L2bFsNv
ktq7W2+t2fboC1ETvnmK1CzIuaA2qRkAAAAYSCo1+64UXCX4vuBqwQ8E1wiu
FajPa465QfAjwY2CmwRdwc2CtYJbBLHvaxbcFne7oC+4Q3CnQDhAW7yGtp2a
I8lraAfWx20Q3CfYKCA1k5oD7unNGbGZ1AwAAAAMgNRMaiY1j3Nqzl1pJjUD
AAAAAwlTM0Ut86r6vWhC6yraXA0MAAAAGIBVMDUXGlxuzc7OHnvssRVOoNwN
qXwaVFjey1HxW7E4jWVmAAAAAIOyxm2tueodVoJ//Md/9OI/6iD8EKPqiRTE
lzUDAAAAI1E0Nf+v//JGofHl1j133WZPoPLkXsqGVD4HyqvxTM1OZs5aZnbu
J1IDAAAAJbCKrzVrji9xknauoWHdGtaft8lLMTVrfEczqRkAAAAoyVBTc4mr
gTSsW8P611JNzVqHZpOaAQAAgJIYJCnN8UXb5sYfGtaqYf1rSaZm3SuAkZoB
AACAkhgkKc3xRdvmxh8a1qph/WsJpmZ3mVkbqRkAAAAogUGS0hxftG1u/KFh
rRrWv5ZeapZ88TKpGQAAABgygySlOb5o29z4s0Qazs9MuZFmqj1X0xkulVp6
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
ffTwCgAAYF1GvI3sTx2bFCET8+zT3flwUvP6MpEvOVgPl6OIW74rqfn1B6vY
O3r/JZQiPwmE5by2AygAAIB1GfE2sj91bFKElJqX9Xg1innzdX1q/uM/fHk9
ev2y+PrM/NEPXs//+/2XWS4e/+/r91+XeyZff//19Dx6NAvO60OWNT+2njS+
/bCatccPTY+8S9Nevf3g7atSs9QMAAD0JCPeRvanjk2KkO7QXtsz7Q7tUqT9
5O27k2RaOi9e5ejlF5epeX4wPQ7U0z8sv15uWxuy/qTV711LzaONP3R6ig0A
ALAuI95G9qeOTYuQPg2sXEmfBlabmitvdt44Dl5Lx5XT4dLXa4f88SKAr51B
h6ZtPq/UDAAA9Ccj3kb2p45Ni5B+81SlUn7zVO0d2tUvrgfb+NS8OWRt4Cw6
v5QT8QevR1IzAAAwUBnxNrI/dWxahIzLnqvmaviNzaRJz5K7TOxLbqrc1Ly8
6Xp5U/T0DcjBO7SbU3PtkMWJ9vJJxzl9fk/42lNLzQAAwPBkxNvI/i1tD5fl
u3mb35ZbFyE37nNuGLhxo3V0Jk15ltxl9piaq2usUnPtb57a/CCvyNQ8+9yw
LZ8GNgnLi1u3V+99nv7n+6/doQ0AAAxVf6n55u558efnm7vk1LzxSdThgZsf
lhWdSROeJfLVxXxyV3upebXGKjUrqRkAAIh2sKn5o8ers9WExoHrnWm/1yn2
WSJf3eYyUvNgCgAAYN3hpub1W52DA2t+P3JCJo19lshXF/XLmqVmqRkAABiI
/lLzju9r3vhYrdDAuk/fSsikkc8S+eriPgqsvdRc975mJTUDAADRekvNKRWI
kE93VxEfcP1wuZltUzJp3LNEVt0yKS85vOT5ln95kJqlZgAAIENGvI3sTx2b
ESFfbi+3vke49n3ESZk05lkiK/JNzakbTuv+enKeHLz9W2qWmgEAgAwZ8Tay
P3VsqxGy64GtV+sbSs1SMwAAkCEjmkX2p47tMkJKzUpqBgAAYmREs8j+1LFd
RkipWUnNAABAjIxoFtmfOrbLCCk1K6kZAACIkRHNIvtTx3YZIaVmJTUDAAAx
MqJZZH/q2C4jpNSspGYAACBGRjSL7H/TquEPbF27G0rNUjMAAJBhf6m571fW
5M3iJHewWt/wpFPzJ19+NdquxasNAAAcjb2m5rbuLm693pzyHdrjCPnqy5/M
E+UHr8cPvP4gNnuuvnHH+vDtq9Hrl9Tv+uB13gKffPDySUwnAADAuoxoFtmf
OvagM+nwN6xLzZPInBBde0/N2QtIzQAAQK6MaBbZnzr2oDPp8DfcSM0bkfnl
/fmdytOj55fXo1dvP1w9NP7i5Bvff/1q1TOuT96+O/umZfPyK/Oe1Xe9/7J8
dPqV9dRcXWDyja/ff736yiRoT7/3y5+UZr7e3HPy0ibPtZGaP3g9X/WDt8tX
MX/Sd99+IjUDAAA1MqJZZH/q2IPOpMPfsJqa3301i591x7jjvDzJs5P3As+y
5+JcePru4GnULX9l1jMOpNPgWTnInj406Zll0lL/alTMAqVRs57amQ3n14vU
/Haer5d/+MOXt7Mn/fATqRkAAKiTEc0i+1PHHnQmHf6GldQ8iZyTjFk5pS2Z
fr0UjVdZdX6G+8nbdyc987PdUtT94/JHb63l6MV3rfWHFlh943iT6qjKrdob
e4ZT8+ysedw8OfKeNi9Sszu0AQCAehnRLLI/dexBZ9Lhb1jzvubygW8p/1aS
7OsPVlE3JjVPwm/o9Hlbal5bIDY1b+y5/ax5Mf/1B1IzAADQLCOaRfanjj3o
TDr8Des/Q3sZclf3PJfvc54k31evFu8RjrlDexl+J5PXU3O1f+MO7bUF4lPz
2p5bU/MnX377Mr89++Xlg09WXwEAAFiXEc0i+1PHHnQmHfqGD5eB3zw1OfOd
v8F57cO4FqfDq/9s/DSwUtCe/ff781xcfbpF/zjkRnwa2Fpqng2ffxpY5Wbs
yp7bPw3sw5fXi51n95PPpwEAAKzLiGaR/aljDziTDnzDSWQupeaEWsbVgde2
Pf3mKQAAIFdGNIvsTx17qJl08Bs+Xo0ubp+SU/Ps5Hfzzc5Dq5g9Vx9Q1qTX
H0QAAGCgMqJZZH/q2APNpIPf8OnuPCs1n2IBAACsy4hmkf2pYw8zkx7Ahi+3
Z4uz1N5j6cALAABgXUY0i+xPHXugmfRQNpSapWYAACBDRjSL7E8dO9xMOv0A
6rGL26eBbhhRUrPUDAAAZMiIZpH9qWO7zKcJmfT55mJ0+Tj58/31/A9dVCup
eePTrnqPpQMvAACAdRnRLLI/dWyX+TQxk473GTu7OD+7e05/usU/BcxcP+xj
w/r60hc/vyypWWoGAAAyZESzyP7UsQn5NCuHZmbSSZafLjP9rcc5Wf7hZvVa
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
pzskuNYT38ssx52vf9rYIaTmxpPxPu7Q7mtJqRkAANhdRvCJ7I9pq4TTDist
8Q34Du0e61A2jGmTmgEAgJCM4BPZnzq2+zxlw1PYMKZNagYAAEIygk9kf+rY
7vOUDU9hw5g2qRkAAAjJCD6R/alju89TNjyFDWPapGYAACAkI/hE9qeO7T5P
2fAUNoxpk5oBAICQjOAT2Z86tvs8ZcNT2DCmTWoGAABCMoJPZH/q2O7zlA1P
YcOYNqkZAAAIyQg+kf2pY7vPUzY8hQ1j2map+Q0AAMCGjOAjNdvwgDaMaZul
ZqWUUkoppZSqLal5gGXDtjaMaZOalVJKKaWUUg0lNQ+wbNjWhjFtUrNSSiml
lFKqofaUmnu43TyFDXd3EBvG/B9ValZKKaWUUko11J5Ss1IHUVKzUkoppZRS
qrmkZnXKJTUrpZRSSimlmktqVqdcUrNSSimllFKquaRmdcolNSullFJKKaWa
S2pWp1xSs1JKKaWUUqq5UlNwn5+JDHsgNSullFJKKaUaKik1vwfHqPcfQ6WU
UkoppdRgyx3XSimllFJKKaVUqKRmpZRSSimllFIqVFKzUkoppZRSSikVKqlZ
KaWUUkoppZQKldSslFJKKaWUUkqFSmpWSimllFJKKaVCJTUrpZRSSimllFKh
kpqVKqY/CAAAAGsKqVkppZRSSimllAqX1KxU4awZAACoU0jNSimllFJKKaVU
uGap+Q2ctv8fTBAyxg==
    "], {{0, 998}, {1298, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1298, 998},
  PlotRange->{{0, 1298}, {0, 998}}]], "Input"],

Cell[CellGroupData[{

Cell["Examples", "Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.59083410768832*^9, 3.590839177148*^9, 
   3.5943799865912957`*^9},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell["\<\
Use both commands to calculate the sum of the n first natural numbers:\
\>", "Text",
 CellChangeTimes->{{3.5898125465*^9, 3.58981255534375*^9}, {
  3.590833333475011*^9, 3.590833436728385*^9}, {3.590932992375*^9, 
  3.590933031953125*^9}},
 FontSize->16],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "n"], "k"}]], "Input",
 CellChangeTimes->{{3.58981256378125*^9, 3.589812567421875*^9}, {
  3.5908334398331633`*^9, 3.59083345532585*^9}, {3.590933035265625*^9, 
  3.59093306059375*^9}},
 CellID->698557789],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"k", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59093307121875*^9, 3.5909330915625*^9}}],

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", "n", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False]
}, Closed]],

Cell[TextData[{
 "It is very important to remark the difference between ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and ",
 StyleBox["n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Now, we are using k as the \"mute\" variable, which will disappear after \
doing the summation. Consequently, the summation depends on the upper bound, ",
 StyleBox["n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and of course it doesn't depend on ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". \nIn the same way, the summation of the first  ",
 StyleBox["n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " even number can be calculated, starting  with ",
 StyleBox["2",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.588429962761627*^9, 3.5884299843721085`*^9}, {
   3.58981260328125*^9, 3.5898126083125*^9}, {3.589812654328125*^9, 
   3.589812656671875*^9}, {3.5908334858275642`*^9, 3.590833609363638*^9}, {
   3.5909331196875*^9, 3.590933200046875*^9}, {3.59093330721875*^9, 
   3.590933354875*^9}, {3.590933398*^9, 3.590933421078125*^9}, {
   3.59093346225*^9, 3.59093349896875*^9}, {3.59093353859375*^9, 
   3.59093355171875*^9}, 3.590933590328125*^9, 3.59093427253125*^9},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], "n"], 
  RowBox[{"2", "k"}]}]], "Input",
 CellChangeTimes->{{3.58981256378125*^9, 3.589812567421875*^9}, {
  3.5908334398331633`*^9, 3.59083345532585*^9}, {3.590933035265625*^9, 
  3.59093306059375*^9}, {3.590933622765625*^9, 3.5909336265*^9}, {
  3.59093365971875*^9, 3.59093366125*^9}},
 CellID->40185539],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "n"}], ")"}]}]}]], "Input",
 NumberMarks->False]
}, Closed]],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"2", "k"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.59093307121875*^9, 3.5909330915625*^9}, 
   3.590933603109375*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["3. Infinite summations",
 FontSize->18]], "Section 1",
 CellChangeTimes->{{3.5874672518125*^9, 3.58746725453125*^9}, {
   3.587467464984375*^9, 3.5874674695*^9}, {3.587628634112982*^9, 
   3.5876286613264046`*^9}, {3.587629846153367*^9, 3.5876298755339537`*^9}, {
   3.5876312457540183`*^9, 3.5876312593327513`*^9}, {3.587732439821395*^9, 
   3.5877324485885954`*^9}, {3.587733579064195*^9, 3.587733610591795*^9}, {
   3.5877336788261952`*^9, 3.587733679855795*^9}, {3.5884964730413265`*^9, 
   3.5884964913402433`*^9}, {3.589552178859375*^9, 3.58955219521875*^9}, {
   3.590652028078125*^9, 3.5906520395*^9}, 3.590763716765625*^9, {
   3.590834039245544*^9, 3.590834051477512*^9}, {3.59093431209375*^9, 
   3.59093432790625*^9}, {3.5943801522347345`*^9, 3.594380155807226*^9}, 
   3.6548367886982117`*^9},
 TextAlignment->Left,
 TextJustification->1,
 FontSize->16],

Cell[TextData[{
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "can be used to calculate infinite summations or numerical series only \
choosing like upper bound in the summation the value ",
 StyleBox["\[Infinity]",
  FontWeight->"Bold"],
 ". When the result given by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a number, the series is convergent and the obtained real number is the \
value of the summation. If the result is infinity, the series is divergent. \
However, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " doesn't know how to do the summation of some series. Sometimes ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can only do an approximation. Now we are going to learn how to calculate \
the exact value and the approximate value of some series. "
}], "Text",
 CellChangeTimes->{{3.5908341526844883`*^9, 3.5908342070730605`*^9}, {
  3.590834239556424*^9, 3.5908342570150623`*^9}, {3.590834300248204*^9, 
  3.5908344380606704`*^9}, {3.590836316461488*^9, 3.5908363186298184`*^9}, {
  3.5909345503125*^9, 3.59093469625*^9}},
 FontSize->16],

Cell["Exact summation of numerical series", "Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.59083410768832*^9, 3.590839177148*^9, {
   3.59093483515625*^9, 3.590934839515625*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 StyleBox["Arithmetic, geometric",
  FontSlant->"Italic"],
 " and ",
 StyleBox["arithmetic-geometric",
  FontSlant->"Italic"],
 " series with a general term product of a polynomial of ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " degree and a geometric series), are very useful on computing because many \
summations can be reduced to them and summation can be easily calculated. In \
general, series like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", "p"}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["q", 
       RowBox[{"k", " "}]], "(", "n", ")"}], "\[CenterDot]", " ", 
     SuperscriptBox["r", 
      RowBox[{"n", "   "}]]}]}], TraditionalForm]]],
 "converges if and only if |",
 StyleBox["r",
  FontSlant->"Italic"],
 "| <1. "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, 
   3.721363260391198*^9},
 FontSize->16,
 CellID->6972],

Cell[CellGroupData[{

Cell["\<\
Example
\
\>", "Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.59083410768832*^9, 3.590839177148*^9, {
   3.59093483515625*^9, 3.590934839515625*^9}, {3.59093526565625*^9, 
   3.59093538178125*^9}, {3.5909354295625*^9, 3.5909354400625*^9}, {
   3.590935478703125*^9, 3.590935479546875*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "=", "2"}], "\[Infinity]"], " ", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "2"}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "n"}], "-", "2"}], ")"}], "3"]}], 
     SuperscriptBox["3", 
      RowBox[{"n", "+", "1"}]]]}], TraditionalForm]]],
 " is an example of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", "p"}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["q", 
       RowBox[{"k", " "}]], "(", "n", ")"}], "\[CenterDot]", " ", 
     SuperscriptBox["r", 
      RowBox[{"n", "   "}]]}]}], TraditionalForm]]],
 ", because if we expand the numerator:"
}], "Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.59083410768832*^9, 3.590839177148*^9, {
   3.59093483515625*^9, 3.590934839515625*^9}, {3.59093526565625*^9, 
   3.59093538178125*^9}, {3.5909354295625*^9, 3.590935491484375*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "n"}], " ", "-", "2"}], ")"}], "3"]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.594379670735858*^9, 3.594379712497058*^9}}],

Cell[TextData[{
 "the numerator is a polynomial and  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can do the summation: "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.5943797282686577`*^9, 
  3.594379730047058*^9}, {3.594379817079522*^9, 3.5943798389666033`*^9}},
 FontSize->16,
 CellID->268787430],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "2"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    RowBox[{"-", "16"}], "+", 
    RowBox[{"64", " ", "n"}], "-", 
    RowBox[{"72", " ", 
     SuperscriptBox["n", "2"]}], "+", 
    RowBox[{"27", " ", 
     SuperscriptBox["n", "4"]}]}], 
   SuperscriptBox["3", 
    RowBox[{"n", "+", "1"}]]]}]], "Input",
 CellChangeTimes->{{3.59093557709375*^9, 3.590935605359375*^9}}],

Cell[TextData[{
 "of course  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can do the summation without expanding: "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.5943797282686577`*^9, 
  3.594379730047058*^9}, {3.594379817079522*^9, 3.5943798389666033`*^9}, {
  3.594379883754777*^9, 3.594379900602993*^9}},
 FontSize->16,
 CellID->150463522],

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox[
    RowBox[{"\[Sum]", " "}], 
    RowBox[{"n", "=", "2"}], "\[Infinity]"], " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "n"}], "-", "2"}], ")"}], "3"]}], 
    SuperscriptBox["3", 
     RowBox[{"n", "+", "1"}]]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.594379742230658*^9, 3.594379756660658*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Approximated numerical sums.", "Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.59083410768832*^9, 3.590839177148*^9, {
   3.59093483515625*^9, 3.590934839515625*^9}, {3.5909357758125*^9, 
   3.590935794890625*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 StyleBox["   ",
  FontWeight->"Bold"],
 "Calculating  the exact value of a convergent series, for the most part of \
convergent series, is not always possible or too complicated.When this \
happens, we can always estimate the value of the sum  by the ",
 StyleBox["N-th",
  FontWeight->"Bold"],
 " partial sum, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "n"], TraditionalForm]]],
 ". In any case, the error in these approximations is given by the formula\n  \
                                                ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "N"], TraditionalForm]]],
 "= |",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "-", 
    SubscriptBox["s", "N"]}], TraditionalForm]]],
 "|=|",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", 
      RowBox[{"N", "+", "1"}]}]], 
    SubscriptBox["a", "n"]}], TraditionalForm]]],
 "|\n                                                 "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.590936073296875*^9, 3.590936144078125*^9}, {3.590936205875*^9, 
   3.590936219875*^9}, 3.590936410265625*^9, {3.59093644921875*^9, 
   3.590936577234375*^9}, {3.5909867839807987`*^9, 3.5909869831995487`*^9}, {
   3.5909870251682987`*^9, 3.5909870280901737`*^9}, {3.5909871048401737`*^9, 
   3.5909872337620487`*^9}, {3.5909873509339237`*^9, 
   3.5909877399182987`*^9}, {3.5909877701370487`*^9, 
   3.5909877718714237`*^9}, {3.5909878086839237`*^9, 
   3.5909878891526737`*^9}, {3.5909879229495487`*^9, 
   3.5909881701057987`*^9}, {3.5909887906057987`*^9, 
   3.5909888736682987`*^9}, {3.657951265691392*^9, 3.6579513146650476`*^9}, 
   3.6579514252413054`*^9},
 FontSize->16,
 CellID->536187614],

Cell[CellGroupData[{

Cell["Alternating Series: Leibniz\[CloseCurlyQuote]s criteria.", \
"Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.59083410768832*^9, 3.590839177148*^9, {
   3.59093483515625*^9, 3.590934839515625*^9}, {3.5909357758125*^9, 
   3.590935794890625*^9}, {3.6579513840854497`*^9, 3.657951397938605*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 StyleBox["  ",
  FontWeight->"Bold"],
 "For alternating series we have the Leibniz\[CloseCurlyQuote]s criteria:\nIf \
{",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]]],
 ">0} decreases and tends to zero, then  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", 
      RowBox[{"N", "+", "1"}]}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"n", "+", "1"}]]}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]]],
 " converges    and a upper bound on the error of the approximation   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"of", "  ", "s"}], " ", "\[TildeTilde]", " ", 
    SubscriptBox["s", "N"]}], TraditionalForm]]],
 "  is:                                                                       \
                            \n                                                \
  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "N"], TraditionalForm]]],
 "= |",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "-", 
    SubscriptBox["s", "N"]}], TraditionalForm]]],
 "|=|",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["a", 
     RowBox[{"N", "+", "1"}]]}], TraditionalForm]]],
 "| \nIn this way, we have a bound of the error committed by using the \
partial sum ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "N"], TraditionalForm]]],
 " instead of the total sum. For example, determining the sum\n               \
                                         ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", 
      RowBox[{"N", "+", "1"}]}]], 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"n", "+", "1"}]], 
     RowBox[{
      SuperscriptBox["n", "2"], "+", "1"}]]}], TraditionalForm]]],
 "            \nwe can use the bound associated to the Leibniz\
\[CloseCurlyQuote]s theorem. Consequently\n                                   \
               ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "N"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"s", " ", "-", " ", 
     SubscriptBox["s", "N"]}], "|", 
    RowBox[{"\[LessEqual]", " ", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"N", "+", "1"}], ")"}], "2"], "+", "1"}]]}]}], 
   TraditionalForm]]],
 ",\nif we approximate the sum with only  100 terms\n                         \
                       ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", " ", "\[TildeTilde]", " ", 
    SubscriptBox["s", "100"]}], TraditionalForm]]],
 "   =       ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", 
      RowBox[{"N", "+", "1"}]}], "100"], " ", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"n", "+", "1"}]], 
     RowBox[{
      SuperscriptBox["n", "2"], "+", "1"}]]}], TraditionalForm]]],
 "    \[TildeTilde] 0.3639359773\nand the error\n                             \
                          ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "100"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", 
     RowBox[{"s", " ", "-", "  ", 
      SubscriptBox["s", "100"]}], "|", "  ", 
     RowBox[{"\[LessEqual]", "        ", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"100", "+", "1"}], ")"}], "2"], "+", "1"}]]}]}], "  ", "=", 
    " ", 
    RowBox[{
     FractionBox["1", "10202"], " ", "<", "  ", 
     FractionBox["1", "10000"], " "}]}], TraditionalForm]]],
 "<",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "4"}]], TraditionalForm]]],
 "\n                                                       \nwhich guarantees \
us three exact decimal digits.\n\nIt is  necessary to fulfill the following \
inequality to obtain at least 5 exact decimal digits.\n                       \
                                       ",
 Cell[BoxData[
  RowBox[{" ", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"N", "+", "1"}], ")"}], "2"], "+", "1"}]]}]]],
 " <",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]], TraditionalForm]]],
 "\n                                                       or, solving the \
inequality with "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.590936073296875*^9, 3.590936144078125*^9}, {3.590936205875*^9, 
   3.590936219875*^9}, 3.590936410265625*^9, {3.59093644921875*^9, 
   3.590936577234375*^9}, {3.5909867839807987`*^9, 3.5909869831995487`*^9}, {
   3.5909870251682987`*^9, 3.5909870280901737`*^9}, {3.5909871048401737`*^9, 
   3.5909872337620487`*^9}, {3.5909873509339237`*^9, 
   3.5909877399182987`*^9}, {3.5909877701370487`*^9, 
   3.5909877718714237`*^9}, {3.5909878086839237`*^9, 
   3.5909878891526737`*^9}, {3.5909879229495487`*^9, 
   3.5909881701057987`*^9}, {3.5909887906057987`*^9, 
   3.5909888736682987`*^9}, {3.657951265691392*^9, 3.6579513146650476`*^9}, {
   3.6579515476326723`*^9, 3.657951722504928*^9}, {3.6579517647945347`*^9, 
   3.6579517969052453`*^9}, {3.6579518617157955`*^9, 3.65795191471645*^9}, {
   3.7213632815510817`*^9, 3.721363294924744*^9}},
 FontSize->16,
 CellID->142625179]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Reduce", "[", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"N", "+", "1"}], ")"}], "2"], "+", "1"}]], " ", "<", 
     FormBox[
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]],
      TraditionalForm]}], ",", "N"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5909871690432987`*^9, 3.5909871690589237`*^9}, {
  3.5909888798245487`*^9, 3.5909888922151737`*^9}, {3.591005001203125*^9, 
  3.59100501959375*^9}}],

Cell[TextData[{
 "and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " give us two results (a second degree equation has two solutions). Let's go \
to calculate the numerical form: "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
  3.5910051073125*^9}},
 FontSize->16,
 CellID->422344060],

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.591005030625*^9, 3.5910050350625*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     RowBox[{"N", ">", 
      RowBox[{"999.", " ", "So"}]}], ",", " ", 
     RowBox[{
     "the", " ", "sum", " ", "of", " ", "1000", "  ", "terms", " ", "will", 
      " ", "give", " ", "us", " ", "five", " ", "exact", " ", "decimal", " ", 
      "digits"}]}], "\n", "                                       ", 
    RowBox[{
     RowBox[{"s", " ", "\[TildeTilde]", "  ", 
      SubscriptBox["s", "1000"]}], "   ", "=", "       ", 
     RowBox[{
      RowBox[{
       UnderoverscriptBox[
        RowBox[{"\[Sum]", " "}], 
        RowBox[{"n", "=", "1"}], "1000"], " ", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"n", "+", "1"}]], 
        RowBox[{
         SuperscriptBox["n", "2"], "+", "1"}]]}], "    ", "\[TildeTilde]", 
      " ", "0.3639849730"}]}], "\n"}]}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
   3.5910051380625*^9}, {3.59100520271875*^9, 3.591005226875*^9}, 
   3.591005261984375*^9, {3.591005302640625*^9, 3.59100531575*^9}, {
   3.59100537990625*^9, 3.591005379953125*^9}, {3.59100552975*^9, 
   3.591005637296875*^9}},
 FontSize->16,
 CellID->678475271],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "1000"], 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"n", "+", "1"}]], 
   RowBox[{
    SuperscriptBox["n", "2"], "+", "1."}]]}]], "Input",
 CellChangeTimes->{{3.591005391*^9, 3.591005427734375*^9}, 3.59100576525*^9}],

Cell[TextData[{
 "note that we wrote ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox[
    RowBox[{"\[Sum]", " "}], 
    RowBox[{"n", "=", "1"}], 
    RowBox[{" ", "1000"}]], 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"n", "+", "1"}]], 
    RowBox[{
     SuperscriptBox["n", "2"], "+", "1."}]]}]],
  CellChangeTimes->{{3.591005391*^9, 3.591005427734375*^9}, 3.59100576525*^9}],
 "  instead of ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox[
    RowBox[{"\[Sum]", " "}], 
    RowBox[{"n", "=", "1"}], "1000"], 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"n", "+", "1"}]], 
    RowBox[{
     SuperscriptBox["n", "2"], "+", "1"}]]}]],
  CellChangeTimes->{{3.591005391*^9, 3.591005427734375*^9}, 3.59100576525*^9}],
 ". Evaluate the cell in order to see the difference:"
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
  3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
  3.59100640475*^9, 3.591006419078125*^9}, {3.6258897963152575`*^9, 
  3.625889814995553*^9}},
 FontSize->16,
 CellID->21796491],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "1000"], 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"n", "+", "1"}]], 
   RowBox[{
    SuperscriptBox["n", "2"], "+", "1"}]]}]], "Input",
 CellChangeTimes->{3.591005864765625*^9}],

Cell[TextData[{
 "Can you see the difference between evaluating cells with integers o real \
numbers?  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " tends to solve the cells in the domain you use to write the cell. "
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
  3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
  3.5910059269375*^9, 3.5910060465625*^9}, {3.6548368084720035`*^9, 
  3.6548368109897003`*^9}},
 FontSize->16,
 CellID->128527596],

Cell[TextData[{
 "In some cases is not possible to use the Leibniz's criterion, and we need \
to obtain a bound for the error. If we don't have any bound for the error, we \
can approximate the summation of the series by the partial sum. However, the \
result of the calculus is not guaranteed, because the series can converges \
slowly. For example, if you sum ",
 StyleBox["a thousand millions of terms of the series\n                       \
                                        ",
  FontSlant->"Italic"],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{"n", "\[GreaterEqual]", "2"}]], 
    FractionBox["1", 
     RowBox[{"Log", "[", "n", "]"}]]}], "-", 
   FractionBox["1", 
    RowBox[{"Log", "[", 
     RowBox[{"n", "+", "1"}], "]"}]]}]],
  CellChangeTimes->{{3.591006181*^9, 3.5910062589375*^9}}],
 "\n we don't know the first decimal digit of the sum:\n \n                   \
            ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["s", "1000000000"], "   ", "="}]]],
 "1.39444...while for s= ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Log", "[", "2", "]"}]]],
  CellChangeTimes->{{3.591006181*^9, 3.5910062589375*^9}}],
 "=1.44269\nWe have an indirect method to know the error, we know that \
comparing to consecutive partial sums, the no changing digits are exacts.",
 StyleBox["\n",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.590936073296875*^9, 3.590936144078125*^9}, {3.590936205875*^9, 
   3.590936219875*^9}, {3.590936285640625*^9, 3.590936365609375*^9}, 
   3.5909364271875*^9, {3.591006096421875*^9, 3.5910061530625*^9}, {
   3.5910063134375*^9, 3.5910063990625*^9}, {3.59100644165625*^9, 
   3.591006511671875*^9}, {3.591006545234375*^9, 3.59100657653125*^9}, 
   3.6548368172489424`*^9, 3.7213633019140453`*^9},
 FontSize->16,
 CellID->111298885],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "2"}], "1000000000"], 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Log", "[", "n", "]"}]], "-", 
    FractionBox["1", 
     RowBox[{"Log", "[", 
      RowBox[{"n", "+", "1"}], "]"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.591006181*^9, 3.5910062589375*^9}, {
   3.591006842921875*^9, 3.59100684515625*^9}, 3.5910074698125*^9}],

Cell[TextData[{
 StyleBox["Mathematica'",
  FontSlant->"Italic"],
 "s ",
 Cell[BoxData[
  ButtonBox[Cell["NSum"],
   BaseStyle->Dynamic[
     If[
      CurrentValue["MouseOver"], {
      "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {"Link"}]],
   ButtonData->"paclet:ref/NSum"]]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "can be used for numerical approximations of finite and infinite summations \
as well."
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
  3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
  3.5910059269375*^9, 3.5910060465625*^9}, {3.59100661253125*^9, 
  3.59100666265625*^9}, {3.689316407650976*^9, 3.689316424062976*^9}},
 FontSize->16,
 CellID->349764760],

Cell[GraphicsData["CompressedBitmap", "\<\
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\
\>"], "Graphics",
 ImageSize->{676, 172},
 ImageMargins->{{33, 0}, {0, 4}},
 Background->GrayLevel[1]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"NSum", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"Log", "[", "n", "]"}]], "-", 
     FractionBox["1", 
      RowBox[{"Log", "[", 
       RowBox[{"n", "+", "1"}], "]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "1000000000"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.591006731265625*^9, 3.591006777796875*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["4. Power series",
 FontSize->18]], "Section 1",
 CellChangeTimes->{{3.5874672518125*^9, 3.58746725453125*^9}, {
   3.587467464984375*^9, 3.5874674695*^9}, {3.587628634112982*^9, 
   3.5876286613264046`*^9}, {3.587629846153367*^9, 3.5876298755339537`*^9}, {
   3.5876441651906376`*^9, 3.5876441821443048`*^9}, {3.5877196038181467`*^9, 
   3.5877196141141467`*^9}, {3.588496439610312*^9, 3.588496454383607*^9}, 
   3.589798241484375*^9, {3.589812318921875*^9, 3.589812331171875*^9}, {
   3.590652857828125*^9, 3.590652861203125*^9}, {3.59065347275*^9, 
   3.590653474484375*^9}, {3.59065415771875*^9, 3.590654174234375*^9}, {
   3.5908367698859916`*^9, 3.590836779746013*^9}, {3.591006858921875*^9, 
   3.59100687265625*^9}},
 TextAlignment->Left,
 TextJustification->1,
 FontSize->16],

Cell[TextData[{
 "     Polynomials are a very useful tool in numerical analysis. Power series \
are approximate formulas that play much the same role with respect to \
algebraic expressions as approximate numbers play with respect to numerical \
expressions.  It may be quite sufficient, for example, to find an ",
 StyleBox["approximate",
  FontSlant->"Italic"],
 " formula that is valid, say, when the quantity ",
 Cell[BoxData["x"], "InlineFormula"],
 " is small. \n The idea is, given a function, find a polynomial of ",
 StyleBox["n ",
  FontWeight->"Bold"],
 "degree which approximates the function with a determined  precision. ",
 StyleBox["Taylor's polynomials",
  FontSlant->"Italic"],
 " are used frequently to approximate functions. \n       Taylor's theorem \
allows us to write a ",
 StyleBox["n+1-derivable function  f(x) ",
  FontSlant->"Italic"],
 "in the interval  ",
 StyleBox["I=] a-h,a+h[ ",
  FontSlant->"Italic"],
 ", the expression for ",
 StyleBox["x \[Element] I,",
  FontSlant->"Italic"],
 " \n                                                 ",
 StyleBox["f(x) = ",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "n"], "(", "x", ")"}], TraditionalForm]]],
 " +  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "n"], "(", "x", ")"}], TraditionalForm]]],
 "\nbeing\n                                              ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "n"], "(", "x", ")"}], TraditionalForm]]],
 "= ",
 StyleBox["f(a) + f '(a)(x-a)",
  FontSlant->"Italic"],
 " +",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"f", " ", "''"}], 
          RowBox[{"(", "a", ")"}], "   "}]}], 
        RowBox[{"2", "!"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "a"}], ")"}], "2"]}], "+"}], "..."}], "+"}], 
   TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       SuperscriptBox["f", "n"], " ", 
       RowBox[{"(", "a", ")"}], "   "}]}], 
     RowBox[{"n", "!"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "a"}], ")"}], "n"]}], TraditionalForm]]],
 "\n the Taylor's polynomial of ",
 StyleBox["f(x) ",
  FontSlant->"Italic"],
 "at ",
 StyleBox["x=a",
  FontSlant->"Italic"],
 ", and order ",
 StyleBox["n",
  FontSlant->"Italic"],
 " and where\n\n                                             ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "n"], "(", "x", ")"}], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       SuperscriptBox["f", 
        RowBox[{"n", "+", "1"}]], " ", 
       RowBox[{"(", "s", ")"}], "   "}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "!"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "a"}], ")"}], 
     RowBox[{"n", "+", "1"}]]}], TraditionalForm]]],
 "\n\nis the ",
 StyleBox["Lagrange's remainder",
  FontSlant->"Italic"],
 ", where ",
 StyleBox["s",
  FontSlant->"Italic"],
 " is a point between ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["x",
  FontSlant->"Italic"],
 ". If ",
 StyleBox["a=0",
  FontSlant->"Italic"],
 ", we say that we are using the ",
 StyleBox["McLaurin's formula ",
  FontSlant->"Italic"],
 "of ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 ".\nWhen ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " is infinitely  derivable in the interval",
 StyleBox[" I",
  FontSlant->"Italic"],
 ", the ",
 StyleBox["Taylor's series",
  FontSlant->"Italic"],
 " for ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " at ",
 StyleBox["a ",
  FontSlant->"Italic"],
 "is defined as\n                                                             \
       ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       SuperscriptBox["f", "n"], " ", 
       RowBox[{"(", "a", ")"}], "   "}]}], 
     RowBox[{"n", "!"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "a"}], ")"}], "n"]}], TraditionalForm]]],
 "\n and the n-th partial sum is the Taylor's polynomial. Consequently, this \
series converges to ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " if and only if\n                                                           \
          ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    RowBox[{" ", "lim", " "}], 
    RowBox[{"n", "\[Rule]", "\[Infinity]"}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "n"], "(", "x", ")"}], TraditionalForm]]],
 " =0\n                                                                    \n\
then, it is obvious that\n                                                    \
                  ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    RowBox[{" ", "lim", " "}], 
    RowBox[{"n", "\[Rule]", "\[Infinity]"}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "n"], "(", "x", ")"}], TraditionalForm]]],
 " = ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 "\nand we can write (for  ",
 StyleBox["x \[Element] I",
  FontSlant->"Italic"],
 " )\n                                                                     ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{
      RowBox[{"f", "(", "x", ")"}], "=", " ", 
      RowBox[{"\[Sum]", " "}]}], 
     RowBox[{"                       ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       SuperscriptBox["f", "n"], " ", 
       RowBox[{"(", "a", ")"}], "   "}]}], 
     RowBox[{"n", "!"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "a"}], ")"}], "n"]}], TraditionalForm]]],
 "\n                                                                     \nAn \
expression like                                                               \
       \n                                                                     \
  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{" ", 
      RowBox[{"\[Sum]", " "}]}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    SuperscriptBox[
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "  "}]], "(", 
      RowBox[{"x", "-", "a"}], ")"}], "n"]}], TraditionalForm]]],
 "     \n                                                                     \
\nis a power series centered at ",
 StyleBox["a",
  FontSlant->"Italic"],
 " . Applying  the",
 ButtonBox[" Cauchy\[CloseCurlyQuote]s n-th root criterion",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathworld.wolfram.com/RootTest.html"], None},
  ButtonNote->"http://mathworld.wolfram.com/RootTest.html"],
 ", it can be deduced that the series is (absolutely) convergent if",
 StyleBox[" | x-a|   <R  ",
  FontSlant->"Italic"],
 "and is divergent when  ",
 StyleBox["|x-a|   >R ",
  FontSlant->"Italic"],
 "    , where ",
 StyleBox["R ",
  FontSlant->"Italic"],
 "       is the convergence radius:\n                                         \
                           ",
 StyleBox["R",
  FontSlant->"Italic"],
 "=",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{" ", 
     RowBox[{
      FormBox[
       UnderscriptBox[
        RowBox[{" ", "lim", " "}], 
        RowBox[{"n", "\[Rule]", "\[Infinity]"}]],
       TraditionalForm], 
      RadicalBox[
       RowBox[{"|", 
        SubscriptBox["a", 
         RowBox[{"n", "  "}]], "|"}], "n"]}]}]], TraditionalForm]]],
 "      \n",
 StyleBox["R ",
  FontSlant->"Italic"],
 " can be obtained using the",
 ButtonBox[" d\[CloseCurlyQuote] Alambert\[CloseCurlyQuote]s criterium ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathworld.wolfram.com/RatioTest.html"], None},
  ButtonNote->"http://mathworld.wolfram.com/RatioTest.html"],
 "\n                                                                  ",
 StyleBox["R",
  FontSlant->"Italic"],
 "=",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{"|", 
      SubscriptBox["a", 
       RowBox[{"n", "  "}]], "|"}]}], 
    RowBox[{" ", 
     RowBox[{"|", 
      SubscriptBox["a", 
       RowBox[{"n", "+", "1", "  "}]], "|"}]}]], TraditionalForm]]],
 "\nif both limits exit then they will coincide. The interval ",
 StyleBox["] a-R,a+R[ ",
  FontSlant->"Italic"],
 " will be called ",
 StyleBox["convergence interval ",
  FontSlant->"Italic"],
 "\nof the power series.\n\nA  function ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " defined through a power series has the same properties than a polynomial \
in the convergence interval. Specifically, ",
 StyleBox["f(x) ",
  FontSlant->"Italic"],
 "has a derivative which can be obtained differentiating the series term by \
term. Similarly, the integral can be calculated integrating the series term \
by term. For example                                                          \
                                                                              \
                                                ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "                                                                         \
", 
    RowBox[{
     UnderscriptBox[
      RowBox[{"     ", 
       RowBox[{
        RowBox[{"f", "(", "x", ")"}], "=", " ", 
        RowBox[{"\[Sum]", " "}]}]}], 
      RowBox[{"                               ", 
       RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
     FractionBox[
      RowBox[{" ", 
       RowBox[{
        SuperscriptBox["f", "n"], " ", 
        RowBox[{"(", "a", ")"}], "   "}]}], 
      RowBox[{"n", "!"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "a"}], ")"}], "n"]}]}], TraditionalForm]]],
 "\nwith a convergence radius ",
 StyleBox["R",
  FontSlant->"Italic"],
 ", ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " is a derivable function in",
 StyleBox[" ]a-R, a+R[\n",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"                                                        ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", " ", "'"}], 
        RowBox[{"(", "x", ")"}]}], "=", " ", 
       RowBox[{"\[Sum]", " "}]}]}], 
     RowBox[{
     "                                                                        \
                                           ", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]], 
    SuperscriptBox[
     RowBox[{
      StyleBox[
       SubscriptBox["na", 
        RowBox[{"n", "  "}]],
       FontSlant->"Italic"], "(", 
      RowBox[{"x", "-", "a"}], ")"}], 
     RowBox[{"n", "-", "1"}]]}], TraditionalForm]]],
 ",",
 StyleBox[" x\[Element]]a-R, a+R[\n\n",
  FontSlant->"Italic"],
 "If",
 StyleBox["  x\[Element]]a-R, a+R[ ",
  FontSlant->"Italic"],
 ",then",
 StyleBox["\n                                                    ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "x"], 
     RowBox[{"f", "(", "t", ")"}]}], "=", 
    RowBox[{
     UnderoverscriptBox[
      UnderscriptBox[
       UnderscriptBox["\[Sum]", " "], 
       RowBox[{" ", 
        RowBox[{"n", "\[GreaterEqual]", "0"}]}]], " ", "           "], 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        SubscriptBox["a", 
         RowBox[{"n", "  "}]], "   "}], 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}]}]}], TraditionalForm]]],
 StyleBox["\n\n",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.587477326234375*^9, 3.587477415421875*^9}, {
   3.58747748521875*^9, 3.587477491703125*^9}, {3.587477830953125*^9, 
   3.587477854234375*^9}, {3.587478049484375*^9, 3.587478066734375*^9}, {
   3.5874783103125*^9, 3.5874783123125*^9}, {3.587478348546875*^9, 
   3.587478383640625*^9}, {3.5874795494375*^9, 3.587479557125*^9}, {
   3.587626233890625*^9, 3.587626262359375*^9}, {3.58762633265625*^9, 
   3.587626378328125*^9}, {3.587626473234375*^9, 3.5876265155625*^9}, {
   3.58762703353125*^9, 3.587627152359375*^9}, 3.587627194328125*^9, {
   3.587627279203125*^9, 3.5876273490625*^9}, {3.58762751603125*^9, 
   3.587627538375*^9}, {3.5876289255653133`*^9, 3.58762893357069*^9}, {
   3.5876290289772396`*^9, 3.5876291242584596`*^9}, {3.587629227061206*^9, 
   3.5876292905990763`*^9}, {3.5876294843179655`*^9, 3.587629533928138*^9}, 
   3.587641049410149*^9, 3.587642918690772*^9, 3.587718428485917*^9, {
   3.587719635330147*^9, 3.587719673316147*^9}, {3.5877198172263403`*^9, 
   3.587719825915652*^9}, {3.5877199126215634`*^9, 3.5877199589541574`*^9}, {
   3.5877295867966857`*^9, 3.5877296241586857`*^9}, {3.588496543335162*^9, 
   3.5884965743943644`*^9}, {3.5884976244453773`*^9, 3.588497714688177*^9}, {
   3.5885049147246923`*^9, 3.588504925067559*^9}, {3.58981234890625*^9, 
   3.589812409296875*^9}, {3.5906529275*^9, 3.59065293015625*^9}, 
   3.590653483453125*^9, {3.590653706140625*^9, 3.590653706703125*^9}, {
   3.590654191640625*^9, 3.590654200078125*^9}, {3.590655528328125*^9, 
   3.59065554496875*^9}, 3.590836961220335*^9, {3.5908374490471563`*^9, 
   3.5908374738380985`*^9}, {3.59100807796875*^9, 3.59100820775*^9}, {
   3.59100824075*^9, 3.591008265140625*^9}, {3.591008389390625*^9, 
   3.59100840590625*^9}, 3.591008576421875*^9, {3.59100864484375*^9, 
   3.591008680359375*^9}, {3.591008837703125*^9, 3.591008875765625*^9}, {
   3.59101504953125*^9, 3.591015379296875*^9}, {3.591015475234375*^9, 
   3.59101561034375*^9}, {3.59101568190625*^9, 3.591015692375*^9}, {
   3.591015755890625*^9, 3.591015860375*^9}, {3.5910159043125*^9, 
   3.59101667571875*^9}, 3.59101672521875*^9, {3.59101676253125*^9, 
   3.5910167986875*^9}, {3.591016831453125*^9, 3.59101686721875*^9}, {
   3.59101690371875*^9, 3.59101692040625*^9}, {3.591016984390625*^9, 
   3.59101710953125*^9}, {3.591017142859375*^9, 3.5910175094375*^9}, 
   3.591017669328125*^9, {3.654836821217099*^9, 3.654836835082844*^9}, 
   3.7213633107868853`*^9, {3.721363418701885*^9, 3.7213634241318855`*^9}, {
   3.721363602264885*^9, 3.721363602264885*^9}, {3.721363713887885*^9, 
   3.721363713889885*^9}},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " allows you to perform operations on power series, in all cases maintaining \
the appropriate order or \[OpenCurlyDoubleQuote]degree of precision\
\[CloseCurlyDoubleQuote] for the resulting power series. In many situations, \
you do not need an exact result. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can use Taylor's polynomials to approximate and bound functions."
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
  3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
  3.59100640475*^9, 3.591006419078125*^9}, {3.59101764521875*^9, 
  3.591017649828125*^9}, {3.5910176834375*^9, 3.5910177566875*^9}},
 FontSize->16,
 CellID->267626246],

Cell[GraphicsData["CompressedBitmap", "\<\
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
TOVluWodk+3qkf8Dvhvjug==\
\>"], "Graphics",
 ImageSize->{681, 180},
 Background->GrayLevel[1]],

Cell[TextData[{
 "For example, the exponential function is infinitely differentiable, using \
Taylor's theorem we can write,(if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 StyleBox["=0,",
  FontSlant->"Italic"],
 " we say McLaurin's formula)\n"
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
  3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
  3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
  3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
  3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
  3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
  3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
  3.59100640475*^9, 3.591006419078125*^9}, {3.59101764521875*^9, 
  3.591017649828125*^9}, {3.5910176834375*^9, 3.59101778940625*^9}, {
  3.5910799900137124`*^9, 3.591080063163519*^9}},
 FontSize->16,
 CellID->88725662],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Series", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.591017817921875*^9, 3.59101788409375*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], "+", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   FractionBox[
    SuperscriptBox["x", "10"], "3628800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "11"],
    SeriesData[$CellContext`x, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720], 
    Rational[1, 5040], 
    Rational[1, 40320], 
    Rational[1, 362880], 
    Rational[1, 3628800]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.657951177525942*^9}]
}, Open  ]],

Cell[TextData[{
 "is the 10th-degree Taylor's series (in this case McLaurin's formula) for ",
 Cell[BoxData[
  SuperscriptBox["\[ExponentialE]", "x"]],
  CellChangeTimes->{{3.591017817921875*^9, 3.59101788409375*^9}}],
 " and  ",
 Cell[BoxData[
  RowBox[{
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "11"],
    SeriesData[$CellContext`x, 0, {}, 0, 11, 1],
    Editable->False], " "}]],
  CellChangeTimes->{{3.59101787784375*^9, 3.591017885796875*^9}}],
 "indicates that the error is a term of the 11-th order in ",
 StyleBox["x. ",
  FontSlant->"Italic"],
 "The exponential function is infinitely differentiable, using Taylor's \
theorem we can write,\n\n                                 ",
 Cell[BoxData[
  SuperscriptBox["\[ExponentialE]", "x"]],
  CellChangeTimes->{{3.591017817921875*^9, 3.59101788409375*^9}}],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    FractionBox[
     SuperscriptBox["x", "n"], 
     RowBox[{"n", "!"}]]}], TraditionalForm]]],
 "= 1 + x +",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"2", "!"}]], TraditionalForm]]],
 "+",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["x", "3"], 
    RowBox[{"3", "!"}]], TraditionalForm]]],
 "+....+",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["x", "n"], 
    RowBox[{"n", "!"}]], TraditionalForm]]],
 "  \[ForAll] ",
 StyleBox["x\[Element]",
  FontSlant->"Italic"],
 " \[DoubleStruckCapitalR]\nthe above result is called the Taylor's function \
for  ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "x"], TraditionalForm]]],
 " at the point ",
 StyleBox["a=0",
  FontSlant->"Italic"],
 ". As a general rule, for a power series      ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{" ", 
      RowBox[{"\[Sum]", " "}]}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    SuperscriptBox[
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "  "}]], "(", 
      RowBox[{"x", "-", "a"}], ")"}], "n"]}], TraditionalForm]]],
 " the coefficients are given by the formula\n                                \
                               ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"n", "  "}]], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      SuperscriptBox["f", "n"], " ", 
      RowBox[{"(", "a", ")"}], "   "}]}], 
    RowBox[{"n", "!"}]], TraditionalForm]]],
 "\n\n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can calculate it as well:"
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
   3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
   3.59100640475*^9, 3.591006419078125*^9}, {3.59101764521875*^9, 
   3.591017649828125*^9}, {3.5910176834375*^9, 3.59101778940625*^9}, {
   3.5910179196875*^9, 3.5910180843125*^9}, {3.591018117453125*^9, 
   3.591018246421875*^9}, {3.591018282109375*^9, 3.591018302796875*^9}, {
   3.591018352015625*^9, 3.591018472609375*^9}, {3.5910798497670155`*^9, 
   3.5910799540706215`*^9}, {3.591080115689729*^9, 3.5910801317112374`*^9}, {
   3.591080303002531*^9, 3.591080418725557*^9}, 3.5910825679284525`*^9, {
   3.5910826729917383`*^9, 3.591082693692009*^9}, 3.654836850832058*^9},
 FontSize->16,
 CellID->243155330],

Cell[GraphicsData["CompressedBitmap", "\<\
eJztXc2PXEcR78ybeTOzs7M7drBgYxIbEYVDkECRJWILAQIEK1D4kDiukKyI
UXJArEPOYJ/IJVpjBVs5kNOcgQO7SCsOcPAhByQkxIU1N7QHTvwFMe91d3VX
VVf36zcz+2FnLGW0rz+qq6t+VV39mdduvv3GT3568+03X7959dtv3dx9483X
f371Wz97q0oqnlGq8xul1O2rqv77cfWn/SnU4+qfevzRsf55t/7p12lKNWc9
Ovq7/nmn/um1qrrKOsOsH9Q/9ffRHXWjhsF0pnTGDV7897bk0d41Nd0/1l9b
+rdUB1Ol/93Ye6hTHu/v1JS+CsQ/mqmp2lEH1deXdVrXNFg1VpOrqn1DKPqq
TcPU/8TZ+h3qwNQ2b9gauDbqr4PpNXX36Niyd6f++ytCm1La14W0L+m0ntjE
AefxZZ09IQQ0H+Sb5z1Ud697nis5dbQUepVkd3xRqzeTVyh1/Y46siS6+nfs
5Kd129BMQA+V7WKxKv/Pad2kA5sAkpDsBJFNSUT4xk30bctiEVtmnGiK9hxL
STswNQx66rvkaZmya5Yeol/bgDL0a5Db+mOduRnLJuZVl3HCrZu0yh25JrPw
0zsRHGwG0oEypjtciQppy1BUFSUMkoo/09w6hXiKVYyHAUJ/AjZDUY2cchsI
DJCjgvyB/XVC15V5r6wcUsZCZeTcQJ9RkwC8PJUXxAWafzl2Lks62xC7dnyJ
GMuGzh61sqUC6UpZx/0H2WF/cn6HrcXAfYG3jpqpjvLjKRi5YW4jrJ8UmVFJ
RROThH4XMPZokkjbdbW6/zydfDPSW4h0C8cdazqQpkKSWU+0JUraOeLGHqHi
NvKxfqPj/FvVwrQKEoxBb4JaaLI1yB3S0tT5a8dkS3fdPSkQFIKULwZGYnxo
TVp2dv7bNm1iPVAahnqKY9usqfYssoIEbmRFBqS77YAA3tt2RH/19e8VksYN
OSmUxqZxNIpoIp33TgoHlxdkvZ3/K2Wb6mLzsw6/iI48a7m218K9LxCPY8jT
eYH3IH6gdL0dE2fTqEuLvaGAz0JIg6ZdFGLyIBRo5bEtWcN2T8zzcW8DDkx3
e1GOeyhu4mF1pNcIXhOF4zTPhjT2g8JwnLY2j3NeniJLZKXKxshxXE2octtD
twPSovAUFVzYspJ2ZJebr13nc5EY+6CJvK5F4G64Xk9wzQYYDM8F9Sr4AZG7
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
\
\>"], "Graphics",
 ImageSize->{661, 128},
 Background->GrayLevel[1]],

Cell[TextData[{
 "\nThe number \[ExponentialE] can be approximated  just substituting",
 StyleBox[" x=1",
  FontSlant->"Italic"],
 " in the McLaurin's polynomial. For example, if you substitute ",
 StyleBox["x",
  FontSlant->"Italic"],
 " by  ",
 StyleBox["1",
  FontSlant->"Italic"],
 " in the ",
 StyleBox["5-th",
  FontSlant->"Italic"],
 " degree McLaurin's polynomial, you'll obtain the following approximation \
for the number \[ExponentialE]"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/XUnN9+vA68cP7lXioPo4IMLzED0uz8+5iB6eVqo
A4g2U/8KphkamHW1DoJoe30wzeBuAuHbmUH4xtYQ2jwIQp+OgNBK0RB6XTVE
/dUGCB1a4AMWzyqD0EJnILTwTQg9Q8IXrC5JCkwzLJ8aBOZbTQPTDHmzIPTa
5RD623YI3XUGom7dBQh99gGEdn4KoW8+h9AM7yC08F8QndJt8bUASHc4OTEV
AmlnoTIxEF16qEwCRO8ReaALog+bh9uAaLEwAe8iIM0huAVMAwC8QZqN
  "],
 FontSize->16,
 CellID->138890962],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Series", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.591080420488391*^9, 3.591080449832555*^9}, {
  3.5910804866002216`*^9, 3.591080496630443*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "6"],
    SeriesData[$CellContext`x, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120]}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.657951179865972*^9, 3.721363900922885*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{"%", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.721363904574995*^9, 3.7213639195514927`*^9}}],

Cell[BoxData[
 FractionBox["1", "24"]], "Output",
 CellChangeTimes->{3.7213639201855555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"]}]}]], "Input",
 CellChangeTimes->{{3.591080454715449*^9, 3.5910804664305854`*^9}, {
  3.591080503821628*^9, 3.5910805498077745`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.591080467896901*^9, 3.591080475618455*^9}, {
  3.591080529716134*^9, 3.5910805326487646`*^9}}],

Cell[BoxData[
 FractionBox["163", "60"]], "Output",
 CellChangeTimes->{3.657951183563219*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.591080561085924*^9, 3.5910805656252623`*^9}}],

Cell[BoxData["2.716666666666667`"], "Output",
 CellChangeTimes->{3.6579511856536465`*^9}]
}, Open  ]],

Cell[TextData[{
 "As you know, when a function is approximated with the Taylor polynomial of \
degree ",
 StyleBox["n ",
  FontSlant->"Italic"],
 "the error is determined by the Lagrange remainder. If   ",
 StyleBox["x=1",
  FontSlant->"Italic"],
 ", ",
 StyleBox["a=0 ",
  FontSlant->"Italic"],
 "and   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "n"], "(", "x", ")"}], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       SuperscriptBox["f", 
        RowBox[{"n", "+", "1"}]], " ", 
       RowBox[{"(", "s", ")"}], "   "}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "!"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "a"}], ")"}], 
     RowBox[{"n", "+", "1"}]]}], TraditionalForm]]],
 ", we need to calculate the ",
 StyleBox["6-th",
  FontSlant->"Italic"],
 " derivative of ",
 Cell[BoxData[
  SuperscriptBox["\[ExponentialE]", "x"]],
  CellChangeTimes->{{3.591082831732111*^9, 3.5910828470357113`*^9}}]
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
   3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
   3.59100640475*^9, 3.591006419078125*^9}, {3.59101764521875*^9, 
   3.591017649828125*^9}, {3.5910176834375*^9, 3.59101778940625*^9}, {
   3.5910799900137124`*^9, 3.591080063163519*^9}, 3.591080414841082*^9, {
   3.591080596183899*^9, 3.5910806246678557`*^9}, {3.591081089023673*^9, 
   3.591081089023673*^9}, {3.591082340309504*^9, 3.5910823443343816`*^9}, {
   3.5910827810792875`*^9, 3.591082817582911*^9}, {3.591082947468511*^9, 
   3.5910829660013113`*^9}},
 FontSize->16,
 CellID->546650837],

Cell["", "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
   3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
   3.59100640475*^9, 3.591006419078125*^9}, {3.59101764521875*^9, 
   3.591017649828125*^9}, {3.5910176834375*^9, 3.59101778940625*^9}, {
   3.5910799900137124`*^9, 3.591080063163519*^9}, 3.591080414841082*^9, {
   3.591080596183899*^9, 3.5910806246678557`*^9}, {3.591081089023673*^9, 
   3.591081089023673*^9}, 3.59108274448333*^9, 3.591083004283711*^9},
 FontSize->16,
 CellID->468030418],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.591082831732111*^9, 3.5910828470357113`*^9}, {
  3.591082982209711*^9, 3.591083001272911*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.6579511874788694`*^9}]
}, Open  ]],

Cell[TextData[{
 "substituting  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "5"], "(", "1", ")"}], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", 
     SuperscriptBox["\[ExponentialE]", "s"], "    "}], 
    RowBox[{
     RowBox[{"(", "6", ")"}], "!"}]], TraditionalForm]]],
 ", we don't know the value, but we can bound the error, because ",
 StyleBox["s\[Element][0,1], \n",
  FontSlant->"Italic"],
 "if       ",
 StyleBox["0<s<1 ",
  FontSlant->"Italic"],
 "then  ",
 StyleBox["          1     < ",
  FontSlant->"Italic"],
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "s"], "    "}]]],
 "\[LessEqual]  \[ExponentialE]  <3  so   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "5"], "(", "1", ")"}], TraditionalForm]]],
 "< ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", "3", "    "}], 
    RowBox[{
     RowBox[{"(", "6", ")"}], "!"}]], TraditionalForm]]],
 "=0",
 StyleBox[".",
  FontFamily->"CMMI12",
  FontSlant->"Italic"],
 StyleBox["004166666 < 5  ",
  FontFamily->"CMR12"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], TraditionalForm]]],
 " guarantees, at least, two exact decimals,"
}], "Text",
 CellChangeTimes->{{3.59083633636645*^9, 3.5908364117900324`*^9}, {
   3.590836661023599*^9, 3.590836666405875*^9}, {3.590836738668781*^9, 
   3.5908367436610365`*^9}, {3.590934888109375*^9, 3.590934905984375*^9}, {
   3.59093494621875*^9, 3.590934961953125*^9}, {3.59093500159375*^9, 
   3.59093518571875*^9}, {3.59093523834375*^9, 3.5909352570625*^9}, {
   3.5909355174375*^9, 3.590935558671875*^9}, {3.591005058671875*^9, 
   3.5910051073125*^9}, {3.5910057925625*^9, 3.59100589659375*^9}, {
   3.59100640475*^9, 3.591006419078125*^9}, {3.59101764521875*^9, 
   3.591017649828125*^9}, {3.5910176834375*^9, 3.59101778940625*^9}, {
   3.5910799900137124`*^9, 3.591080063163519*^9}, 3.591080414841082*^9, {
   3.591080596183899*^9, 3.5910806246678557`*^9}, {3.591081089023673*^9, 
   3.591081089023673*^9}, {3.591082340309504*^9, 3.5910823443343816`*^9}, {
   3.5910827810792875`*^9, 3.591082817582911*^9}, {3.591082947468511*^9, 
   3.5910829660013113`*^9}, {3.591083042269711*^9, 3.5910831120644007`*^9}, {
   3.591083165276683*^9, 3.591083255227436*^9}, {3.5910832853046217`*^9, 
   3.591083392399995*^9}, {3.5910835029898124`*^9, 3.591083625170579*^9}, {
   3.654836864929019*^9, 3.6548368717748947`*^9}},
 FontSize->16,
 CellID->312085302],

Cell[CellGroupData[{

Cell["Examples", "Subsubsection",
 CellChangeTimes->{{3.58747850765625*^9, 3.587478548078125*^9}, {
   3.58747922809375*^9, 3.587479249828125*^9}, {3.587634047152693*^9, 
   3.5876340554030094`*^9}, {3.587643803194679*^9, 3.5876438089604883`*^9}, 
   3.588430225054895*^9, 3.590761196984375*^9},
 TextJustification->1,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 "Calculate the value of ",
 Cell[BoxData[
  RowBox[{" ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}]], "   "}]]],
 "with a 11-degree polynomial and calculate the error using the Lagrange's \
remainder and Leibniz criterium"
}], "Text",
 CellChangeTimes->{{3.5907578049375*^9, 3.590757925703125*^9}, {
   3.590759155546875*^9, 3.5907591740625*^9}, 3.590761196984375*^9, 
   3.5907612696875*^9, {3.590837580865075*^9, 3.59083758705891*^9}, {
   3.590838220216652*^9, 3.590838324700567*^9}, {3.5910837273053303`*^9, 
   3.591083752328212*^9}, {3.591083794027814*^9, 3.5910838709060917`*^9}, 
   3.721363332702885*^9},
 FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "11"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5908381280580006`*^9, 3.5908381482152677`*^9}, {
   3.5908381809006195`*^9, 3.5908381816026917`*^9}, 3.591083846195217*^9, {
   3.591083882091507*^9, 3.59108388538317*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], "+", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   FractionBox[
    SuperscriptBox["x", "10"], "3628800"], "+", 
   FractionBox[
    SuperscriptBox["x", "11"], "39916800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "12"],
    SeriesData[$CellContext`x, 0, {}, 0, 12, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720], 
    Rational[1, 5040], 
    Rational[1, 40320], 
    Rational[1, 362880], 
    Rational[1, 3628800], 
    Rational[1, 39916800]}, 0, 12, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.657951189631697*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", " ", "]"}], ":=", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "+", 
    FractionBox[
     SuperscriptBox["x", "6"], "720"], "+", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"], "+", 
    FractionBox[
     SuperscriptBox["x", "8"], "40320"], "+", 
    FractionBox[
     SuperscriptBox["x", "9"], "362880"], "+", 
    FractionBox[
     SuperscriptBox["x", "10"], "3628800"], "+", 
    FractionBox[
     SuperscriptBox["x", "11"], "39916800"]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.591083892184901*^9, 3.591083940733035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"-", "1"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.591083945475526*^9, 3.5910839496564064`*^9}}],

Cell[BoxData[
 FractionBox["49583642701", "81749606400"]], "Output",
 CellChangeTimes->{3.6579511970885925`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.5910839541804934`*^9, 3.5910839571601505`*^9}}],

Cell[BoxData["0.6065306597121427`"], "Output",
 CellChangeTimes->{3.6579511988982162`*^9}]
}, Open  ]],

Cell[TextData[{
 "To calculate the error with the remainder of Lagrange we need the 11-th \
derivative., but we know that it is ",
 Cell[BoxData[
  SuperscriptBox["\[ExponentialE]", "x"]],
  CellChangeTimes->{3.591082993550911*^9}],
 ", so know we can bound the remainder:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "11"], "(", 
    FractionBox[
     RowBox[{"-", "1"}], "2"], ")"}], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", 
     SuperscriptBox["\[ExponentialE]", "s"], "    "}], 
    RowBox[{
     RowBox[{"(", "12", ")"}], "!"}]], TraditionalForm]]],
 "  \nif       ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"-", "1"}], "2"], TraditionalForm]]],
 StyleBox["<s<0 ",
  FontSlant->"Italic"],
 "then  ",
 StyleBox["          ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}]], TraditionalForm]]],
 StyleBox["    < ",
  FontSlant->"Italic"],
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "s"], "    "}]]],
 "\[LessEqual]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "0"], "=", "1"}], TraditionalForm]]],
 "    so   \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "11"], "(", "1", ")"}], TraditionalForm]]],
 "< ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{" ", "1", "    "}], 
    RowBox[{
     RowBox[{"(", "11", ")"}], "!"}]], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "399168001"], TraditionalForm]]],
 "=",
 Cell[BoxData["2.505210838544172`*^-8"],
  CellChangeTimes->{3.591084278073922*^9}],
 " ",
 StyleBox[" <   ",
  FontFamily->"CMR12"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "9"}]], TraditionalForm]]],
 " guarantees, at least, eight exact decimals,\n"
}], "Text",
 CellChangeTimes->{{3.5907578049375*^9, 3.590757925703125*^9}, {
   3.590759155546875*^9, 3.5907591740625*^9}, 3.590761196984375*^9, 
   3.5907612696875*^9, {3.590837580865075*^9, 3.59083758705891*^9}, {
   3.5910839725264463`*^9, 3.5910842367955284`*^9}, {3.5910842937522235`*^9, 
   3.591084326076045*^9}, 3.5910844288508215`*^9, 3.5910851487890663`*^9, 
   3.625889740364309*^9},
 FontSize->16],

Cell[TextData[{
 "If we substitute -1/2 in McLaurin's formula we obtain\n   ",
 Cell[BoxData[
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"-", "1"}], "2"]]],
  CellChangeTimes->{{3.591017817921875*^9, 3.59101788409375*^9}}],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"-", "1"}], "2"], ")"}], "n"], 
     RowBox[{"n", "!"}]]}], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]], 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "n"], 
     RowBox[{
      SuperscriptBox["2", "n"], 
      RowBox[{"n", "!"}]}]]}], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     RowBox[{"\[Sum]", " "}], 
     RowBox[{" ", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]], 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"n", "+", "1"}]], 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"n", "-", "1"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "!"}]}]]}], TraditionalForm]]],
 "\nthis is an alternating series, and the error if we take 11 terms can be \
evaluated by the first term we don't use:\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["E", "N"]}], TraditionalForm]]],
 "=|s-",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "N"], TraditionalForm]]],
 "|\[LessEqual] |",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"N", "+", "1"}]], TraditionalForm]]],
 "| so\n\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["E", "11"]}], TraditionalForm]]],
 "=|s-",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "11"], TraditionalForm]]],
 "|\[LessEqual] |",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "12"], TraditionalForm]]],
 "| =",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["2", "11"], 
     RowBox[{
      RowBox[{"(", "11", ")"}], "!"}]}]], TraditionalForm]]],
 "=",
 Cell[BoxData[
  FractionBox["1", "81749606400"]],
  CellChangeTimes->{3.5910850566068935`*^9}],
 "< ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]], TraditionalForm]]],
 "\nwhich guaranties, at least 9 exact decimal."
}], "Text",
 CellChangeTimes->{{3.5907578049375*^9, 3.590757925703125*^9}, {
   3.590759155546875*^9, 3.5907591740625*^9}, {3.59075921534375*^9, 
   3.59075926509375*^9}, 3.5907593211875*^9, {3.5907596524375*^9, 
   3.59075969259375*^9}, {3.590760191984375*^9, 3.5907601958125*^9}, 
   3.590761196984375*^9, {3.5908376164055195`*^9, 3.5908376197286606`*^9}, {
   3.5910844599890203`*^9, 3.5910845522803955`*^9}, {3.5910845827477813`*^9, 
   3.591084613059164*^9}, {3.5910847086578026`*^9, 3.5910848845979857`*^9}, {
   3.5910849228031206`*^9, 3.591084969931627*^9}, {3.591085012083637*^9, 
   3.5910851048118205`*^9}, 3.5910851662146015`*^9, 3.654836903649355*^9},
 FontSize->16],

Cell["\<\

As you can observe the bound of the error depends on the method you choose to \
calculate it.\
\>", "Text",
 CellChangeTimes->{{3.5907578049375*^9, 3.590757925703125*^9}, {
   3.590759155546875*^9, 3.5907591740625*^9}, {3.59075921534375*^9, 
   3.59075926509375*^9}, 3.5907593211875*^9, {3.5907596524375*^9, 
   3.59075969259375*^9}, {3.590760191984375*^9, 3.5907601958125*^9}, {
   3.590760226125*^9, 3.590760393203125*^9}, {3.590760463828125*^9, 
   3.59076048721875*^9}, {3.590760553625*^9, 3.590760687109375*^9}, {
   3.590760722390625*^9, 3.59076072303125*^9}, 3.590761197*^9, {
   3.590837724228177*^9, 3.5908377271144733`*^9}, {3.591085195995574*^9, 
   3.591085239567212*^9}, 3.6548369133389363`*^9},
 FontSize->16]
}, Open  ]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Report.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 717, 16, 67, "Title"],
Cell[CellGroupData[{
Cell[1322, 42, 238, 6, 68, "Section 1"],
Cell[1563, 50, 3694, 93, 190, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5294, 148, 855, 14, 68, "Section 1"],
Cell[6152, 164, 2364, 42, 52, "Text"],
Cell[8519, 208, 1429, 25, 82, "Graphics"],
Cell[9951, 235, 2444, 41, 52, "Text"],
Cell[12398, 278, 58454, 963, 1015, "Input"],
Cell[CellGroupData[{
Cell[70877, 1245, 411, 8, 33, "Subsubsection"],
Cell[71291, 1255, 264, 6, 70, "Text"],
Cell[71558, 1263, 289, 7, 70, "Input",
 CellID->698557789],
Cell[CellGroupData[{
Cell[71872, 1274, 201, 5, 70, "Input"],
Cell[72076, 1281, 277, 9, 70, "Input"]
}, Closed]],
Cell[72368, 1293, 1272, 35, 70, "Text"],
Cell[CellGroupData[{
Cell[73665, 1332, 391, 9, 70, "Input",
 CellID->40185539],
Cell[74059, 1343, 209, 7, 70, "Input"]
}, Closed]],
Cell[74283, 1353, 246, 7, 70, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74578, 1366, 890, 15, 68, "Section 1"],
Cell[75471, 1383, 1088, 25, 52, "Text"],
Cell[76562, 1410, 459, 8, 33, "Subsubsection"],
Cell[77024, 1420, 1281, 37, 78, "Text",
 CellID->6972],
Cell[CellGroupData[{
Cell[78330, 1461, 580, 13, 53, "Subsubsection"],
Cell[78913, 1476, 1358, 40, 53, "Subsubsection"],
Cell[80274, 1518, 347, 11, 56, "Input"],
Cell[80624, 1531, 675, 14, 31, "Text",
 CellID->268787430],
Cell[81302, 1547, 449, 14, 58, "Input"],
Cell[81754, 1563, 718, 15, 31, "Text",
 CellID->150463522],
Cell[82475, 1580, 498, 16, 81, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[83010, 1601, 500, 9, 27, "Subsubsection"],
Cell[83513, 1612, 2060, 50, 85, "Text",
 CellID->536187614],
Cell[CellGroupData[{
Cell[85598, 1666, 578, 10, 33, "Subsubsection"],
Cell[86179, 1678, 5821, 173, 444, "Text",
 CellID->142625179]
}, Open  ]],
Cell[92015, 1854, 536, 16, 51, "Input"],
Cell[92554, 1872, 680, 15, 31, "Text",
 CellID->422344060],
Cell[93237, 1889, 115, 2, 33, "Input"],
Cell[93355, 1893, 1642, 38, 105, "Text",
 CellID->678475271],
Cell[95000, 1933, 355, 11, 59, "Input"],
Cell[95358, 1946, 1521, 42, 51, "Text",
 CellID->21796491],
Cell[96882, 1990, 318, 11, 59, "Input"],
Cell[97203, 2003, 858, 17, 31, "Text",
 CellID->128527596],
Cell[98064, 2022, 2184, 48, 197, "Text",
 CellID->111298885],
Cell[100251, 2072, 428, 12, 59, "Input"],
Cell[100682, 2086, 1097, 26, 31, "Text",
 CellID->349764760],
Cell[101782, 2114, 2273, 39, 192, "Graphics"],
Cell[104058, 2155, 422, 12, 71, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104541, 2174, 807, 14, 68, "Section 1"],
Cell[105351, 2190, 14428, 438, 1054, "Text"],
Cell[119782, 2630, 1116, 21, 31, "Text",
 CellID->267626246],
Cell[120901, 2653, 3797, 64, 196, "Graphics"],
Cell[124701, 2719, 998, 21, 52, "Text",
 CellID->88725662],
Cell[CellGroupData[{
Cell[125724, 2744, 286, 7, 56, "Input"],
Cell[126013, 2753, 1103, 37, 67, "Output"]
}, Open  ]],
Cell[127131, 2793, 3857, 115, 197, "Text",
 CellID->243155330],
Cell[130991, 2910, 5481, 92, 144, "Graphics"],
Cell[136475, 3004, 839, 24, 52, "Text",
 CellID->138890962],
Cell[CellGroupData[{
Cell[137339, 3032, 337, 8, 56, "Input"],
Cell[137679, 3042, 686, 22, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138402, 3069, 161, 3, 33, "Input"],
Cell[138566, 3074, 93, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138696, 3081, 456, 13, 52, "Input"],
Cell[CellGroupData[{
Cell[139177, 3098, 171, 3, 33, "Input"],
Cell[139351, 3103, 93, 2, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139493, 3111, 122, 2, 33, "Input"],
Cell[139618, 3115, 89, 1, 47, "Output"]
}, Open  ]],
Cell[139722, 3119, 2058, 56, 43, "Text",
 CellID->546650837],
Cell[141783, 3177, 902, 14, 31, "Text",
 CellID->468030418],
Cell[CellGroupData[{
Cell[142710, 3195, 282, 7, 35, "Input"],
Cell[142995, 3204, 109, 2, 47, "Output"]
}, Open  ]],
Cell[143119, 3209, 2486, 68, 71, "Text",
 CellID->312085302],
Cell[CellGroupData[{
Cell[145630, 3281, 365, 7, 33, "Subsubsection"],
Cell[145998, 3290, 690, 16, 31, "Text"],
Cell[CellGroupData[{
Cell[146713, 3310, 376, 8, 35, "Input"],
Cell[147092, 3320, 1197, 40, 67, "Output"]
}, Open  ]],
Cell[148304, 3363, 846, 26, 73, "Input"],
Cell[CellGroupData[{
Cell[149175, 3393, 164, 4, 33, "Input"],
Cell[149342, 3399, 112, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149491, 3406, 124, 2, 33, "Input"],
Cell[149618, 3410, 90, 1, 47, "Output"]
}, Open  ]],
Cell[149723, 3414, 2282, 80, 141, "Text"],
Cell[152008, 3496, 3237, 111, 192, "Text"],
Cell[155248, 3609, 734, 14, 52, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
